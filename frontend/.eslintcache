[{"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\index.js":"1","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\App.js":"2","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\store.js":"3","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\Home.js":"4","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\actions\\userActions.js":"5","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\AddFAQ.js":"6","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\Addblogs.js":"7","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\BlogList.js":"8","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\AddSubscription.js":"9","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\Dashboard.js":"10","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\NewProduct.js":"11","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\BookedServices.js":"12","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\OrdersList.js":"13","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\ProcessOrder.js":"14","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\ProductReviews.js":"15","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\ProductsList.js":"16","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\FAQ.js":"17","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\SendNotification.js":"18","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\SubscriptionList.js":"19","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\Updateblog.js":"20","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\UpdatedSubscription.js":"21","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\UpdateFaq.js":"22","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\UpdateProduct.js":"23","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\UpdateUser.js":"24","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\cart\\Cart.js":"25","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\UsersList.js":"26","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\cart\\ConfirmOrder.js":"27","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\cart\\OrderSuccess.js":"28","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\cart\\Shipping.js":"29","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\cart\\Payment.js":"30","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\cart\\SubscriptionPayment.js":"31","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\layout\\Footer.js":"32","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\layout\\Header.js":"33","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\order\\ListOrders.js":"34","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\order\\OrderDetails.js":"35","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\BookNow.js":"36","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\BlogPage.js":"37","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\ChattForum.js":"38","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\ContactUs.js":"39","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\FAQ.js":"40","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\SubscriptionPage.js":"41","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\Services.js":"42","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\SubscriptionSuccess.js":"43","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\product\\ProductDetails.js":"44","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\route\\ProtectedRoute.js":"45","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\user\\ForgotPassword.js":"46","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\ServiceView.js":"47","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\user\\Login.js":"48","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\user\\NewPassword.js":"49","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\user\\Register.js":"50","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\user\\Profile.js":"51","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\user\\UpdateProfile.js":"52","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\user\\UpdatePassword.js":"53","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\cards\\BlogCardDetail.js":"54","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\reducers\\productReducers.js":"55","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\reducers\\userReducers.js":"56","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\reducers\\cartReducers.js":"57","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\reducers\\orderReducers.js":"58","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\actions\\productActions.js":"59","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\product\\Product.js":"60","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\layout\\MetaData.js":"61","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\layout\\Loader.js":"62","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\layout\\MySlider.js":"63","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\Sidebar.js":"64","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\Sections\\CallToAction.js":"65","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\Sections\\AboutUs.js":"66","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\Sections\\WhychooseUS.js":"67","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\actions\\cartActions.js":"68","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\cards\\SubscriptionCard.js":"69","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\cards\\FaqCard.js":"70","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\cards\\BlogCard.js":"71","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\actions\\orderActions.js":"72","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\constants\\cartConstants.js":"73","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\constants\\userConstants.js":"74","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\constants\\orderConstants.js":"75","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\constants\\productConstants.js":"76","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\routes\\FetchData.js":"77","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\review\\ListReviews.js":"78","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\layout\\Navbar.js":"79","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\Chatt\\ChattComponent.js":"80","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\layout\\TopHeader.js":"81","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\layout\\MiddleHeader.js":"82","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\cart\\CheckoutSteps.js":"83","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\layout\\NotificationBox.js":"84","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\layout\\Search.js":"85","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\Chatt\\footer\\Footer.jsx":"86","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\index.js":"87","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\App.js":"88","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\store.js":"89","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\Home.js":"90","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\actions\\userActions.js":"91","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\admin\\OrdersList.js":"92","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\admin\\NewProduct.js":"93","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\admin\\ProcessOrder.js":"94","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\admin\\Dashboard.js":"95","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\admin\\ProductsList.js":"96","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\admin\\UpdateProduct.js":"97","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\admin\\ServiceView.js":"98","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\admin\\UsersList.js":"99","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\cart\\ConfirmOrder.js":"100","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\cart\\OrderSuccess.js":"101","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\cart\\Cart.js":"102","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\cart\\Payment.js":"103","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\layout\\Header.js":"104","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\cart\\Shipping.js":"105","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\layout\\Footer.js":"106","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\order\\ListOrders.js":"107","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\order\\OrderDetails.js":"108","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\pages\\ContactUs.js":"109","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\product\\ProductDetails.js":"110","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\route\\ProtectedRoute.js":"111","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\user\\ForgotPassword.js":"112","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\user\\Profile.js":"113","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\user\\Login.js":"114","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\user\\NewPassword.js":"115","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\user\\UpdatePassword.js":"116","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\user\\UpdateProfile.js":"117","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\user\\Register.js":"118","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\admin\\UpdateUser.js":"119","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\reducers\\cartReducers.js":"120","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\reducers\\userReducers.js":"121","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\reducers\\productReducers.js":"122","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\reducers\\orderReducers.js":"123","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\layout\\MetaData.js":"124","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\admin\\Sidebar.js":"125","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\layout\\Loader.js":"126","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\actions\\orderActions.js":"127","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\routes\\FetchData.js":"128","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\actions\\productActions.js":"129","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\actions\\cartActions.js":"130","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\constants\\cartConstants.js":"131","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\constants\\productConstants.js":"132","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\constants\\userConstants.js":"133","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\constants\\orderConstants.js":"134","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\review\\ListReviews.js":"135","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\Sections\\WhychooseUS.js":"136","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\layout\\TopHeader.js":"137","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\cart\\CheckoutSteps.js":"138","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\layout\\Navbar.js":"139","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\layout\\MiddleHeader.js":"140","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\product\\Product.js":"141","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\Sections\\AboutUs.js":"142","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\layout\\MySlider.js":"143","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\layout\\Search.js":"144","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\product\\CompareProduct.js":"145","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\product\\MobileProduct.js":"146","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\product\\LaptopProduct.js":"147","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\product\\SmartWaches.js":"148","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\product\\UpcommingProducts.js":"149"},{"size":615,"mtime":1642391957000,"results":"150","hashOfConfig":"151"},{"size":10688,"mtime":1642841083248,"results":"152","hashOfConfig":"151"},{"size":1734,"mtime":1642391957000,"results":"153","hashOfConfig":"151"},{"size":7194,"mtime":1642391957000,"results":"154","hashOfConfig":"151"},{"size":7420,"mtime":1642391957000,"results":"155","hashOfConfig":"151"},{"size":2319,"mtime":1642391957000,"results":"156","hashOfConfig":"151"},{"size":4031,"mtime":1642391957000,"results":"157","hashOfConfig":"151"},{"size":3563,"mtime":1642391957000,"results":"158","hashOfConfig":"151"},{"size":3950,"mtime":1642391957000,"results":"159","hashOfConfig":"151"},{"size":11125,"mtime":1642849576422,"results":"160","hashOfConfig":"151"},{"size":7053,"mtime":1642860609074,"results":"161","hashOfConfig":"151"},{"size":3210,"mtime":1642391957000,"results":"162","hashOfConfig":"151"},{"size":3361,"mtime":1642391957000,"results":"163","hashOfConfig":"151"},{"size":6278,"mtime":1642391957000,"results":"164","hashOfConfig":"151"},{"size":4719,"mtime":1642391957000,"results":"165","hashOfConfig":"151"},{"size":3791,"mtime":1642391957000,"results":"166","hashOfConfig":"151"},{"size":3255,"mtime":1642391957000,"results":"167","hashOfConfig":"151"},{"size":2402,"mtime":1642391957000,"results":"168","hashOfConfig":"151"},{"size":3759,"mtime":1642391957000,"results":"169","hashOfConfig":"151"},{"size":4591,"mtime":1642391957000,"results":"170","hashOfConfig":"151"},{"size":4688,"mtime":1642391957000,"results":"171","hashOfConfig":"151"},{"size":2868,"mtime":1642391957000,"results":"172","hashOfConfig":"151"},{"size":9148,"mtime":1642391957000,"results":"173","hashOfConfig":"151"},{"size":4590,"mtime":1642391957000,"results":"174","hashOfConfig":"151"},{"size":6923,"mtime":1642391957000,"results":"175","hashOfConfig":"151"},{"size":3546,"mtime":1642391957000,"results":"176","hashOfConfig":"151"},{"size":4582,"mtime":1642391957000,"results":"177","hashOfConfig":"151"},{"size":732,"mtime":1642391957000,"results":"178","hashOfConfig":"151"},{"size":3701,"mtime":1642391957000,"results":"179","hashOfConfig":"151"},{"size":4737,"mtime":1642391957000,"results":"180","hashOfConfig":"151"},{"size":5033,"mtime":1642391957000,"results":"181","hashOfConfig":"151"},{"size":2994,"mtime":1642391957000,"results":"182","hashOfConfig":"151"},{"size":636,"mtime":1642391957000,"results":"183","hashOfConfig":"151"},{"size":2389,"mtime":1642391957000,"results":"184","hashOfConfig":"151"},{"size":3757,"mtime":1642391957000,"results":"185","hashOfConfig":"151"},{"size":12683,"mtime":1642391957000,"results":"186","hashOfConfig":"151"},{"size":1351,"mtime":1642850198807,"results":"187","hashOfConfig":"151"},{"size":398,"mtime":1642850266075,"results":"188","hashOfConfig":"151"},{"size":6849,"mtime":1642391957000,"results":"189","hashOfConfig":"151"},{"size":1627,"mtime":1642841952034,"results":"190","hashOfConfig":"151"},{"size":1525,"mtime":1642391957000,"results":"191","hashOfConfig":"151"},{"size":5284,"mtime":1642391957000,"results":"192","hashOfConfig":"151"},{"size":782,"mtime":1642391957000,"results":"193","hashOfConfig":"151"},{"size":10095,"mtime":1642850110399,"results":"194","hashOfConfig":"151"},{"size":920,"mtime":1642391957000,"results":"195","hashOfConfig":"151"},{"size":2510,"mtime":1642391957000,"results":"196","hashOfConfig":"151"},{"size":4279,"mtime":1642391957000,"results":"197","hashOfConfig":"151"},{"size":3891,"mtime":1642391957000,"results":"198","hashOfConfig":"151"},{"size":2924,"mtime":1642391957000,"results":"199","hashOfConfig":"151"},{"size":7129,"mtime":1642391957000,"results":"200","hashOfConfig":"151"},{"size":1871,"mtime":1642391957000,"results":"201","hashOfConfig":"151"},{"size":4211,"mtime":1642391957000,"results":"202","hashOfConfig":"151"},{"size":2922,"mtime":1642391957000,"results":"203","hashOfConfig":"151"},{"size":9369,"mtime":1642391957000,"results":"204","hashOfConfig":"151"},{"size":6961,"mtime":1642391957000,"results":"205","hashOfConfig":"151"},{"size":6373,"mtime":1642391957000,"results":"206","hashOfConfig":"151"},{"size":1092,"mtime":1642391957000,"results":"207","hashOfConfig":"151"},{"size":4375,"mtime":1642391957000,"results":"208","hashOfConfig":"151"},{"size":5936,"mtime":1642391957000,"results":"209","hashOfConfig":"151"},{"size":1155,"mtime":1642391957000,"results":"210","hashOfConfig":"151"},{"size":224,"mtime":1642391957000,"results":"211","hashOfConfig":"151"},{"size":120,"mtime":1642391957000,"results":"212","hashOfConfig":"151"},{"size":2163,"mtime":1642391957000,"results":"213","hashOfConfig":"151"},{"size":2319,"mtime":1642391957000,"results":"214","hashOfConfig":"151"},{"size":1123,"mtime":1642391957000,"results":"215","hashOfConfig":"151"},{"size":2626,"mtime":1642391957000,"results":"216","hashOfConfig":"151"},{"size":4647,"mtime":1642391957000,"results":"217","hashOfConfig":"151"},{"size":1141,"mtime":1642391957000,"results":"218","hashOfConfig":"151"},{"size":565,"mtime":1642391957000,"results":"219","hashOfConfig":"151"},{"size":822,"mtime":1642391957000,"results":"220","hashOfConfig":"151"},{"size":1065,"mtime":1642846926873,"results":"221","hashOfConfig":"151"},{"size":3664,"mtime":1642391957000,"results":"222","hashOfConfig":"151"},{"size":190,"mtime":1642391957000,"results":"223","hashOfConfig":"151"},{"size":2213,"mtime":1642391957000,"results":"224","hashOfConfig":"151"},{"size":1160,"mtime":1642391957000,"results":"225","hashOfConfig":"151"},{"size":1905,"mtime":1642391957000,"results":"226","hashOfConfig":"151"},{"size":448,"mtime":1642391957000,"results":"227","hashOfConfig":"151"},{"size":689,"mtime":1642391957000,"results":"228","hashOfConfig":"151"},{"size":5004,"mtime":1642391957000,"results":"229","hashOfConfig":"151"},{"size":10721,"mtime":1642855501588,"results":"230","hashOfConfig":"151"},{"size":8698,"mtime":1642391957000,"results":"231","hashOfConfig":"151"},{"size":1990,"mtime":1642843517616,"results":"232","hashOfConfig":"151"},{"size":1940,"mtime":1642391957000,"results":"233","hashOfConfig":"151"},{"size":526,"mtime":1642391957000,"results":"234","hashOfConfig":"151"},{"size":1132,"mtime":1642391957000,"results":"235","hashOfConfig":"151"},{"size":1513,"mtime":1642851797950,"results":"236","hashOfConfig":"151"},{"size":615,"mtime":1642391957000,"results":"237","hashOfConfig":"238"},{"size":7656,"mtime":1644747938163,"results":"239","hashOfConfig":"238"},{"size":1734,"mtime":1642391957000,"results":"240","hashOfConfig":"238"},{"size":7051,"mtime":1644748072663,"results":"241","hashOfConfig":"238"},{"size":6647,"mtime":1644605301174,"results":"242","hashOfConfig":"238"},{"size":3776,"mtime":1645611841086,"results":"243","hashOfConfig":"238"},{"size":7470,"mtime":1644663031200,"results":"244","hashOfConfig":"238"},{"size":5829,"mtime":1645611943516,"results":"245","hashOfConfig":"238"},{"size":4936,"mtime":1645612283708,"results":"246","hashOfConfig":"238"},{"size":3660,"mtime":1645612008552,"results":"247","hashOfConfig":"238"},{"size":8522,"mtime":1644609277524,"results":"248","hashOfConfig":"238"},{"size":4279,"mtime":1642391957000,"results":"249","hashOfConfig":"238"},{"size":3562,"mtime":1644862219694,"results":"250","hashOfConfig":"238"},{"size":3941,"mtime":1645611459192,"results":"251","hashOfConfig":"238"},{"size":732,"mtime":1642391957000,"results":"252","hashOfConfig":"238"},{"size":5528,"mtime":1645610982142,"results":"253","hashOfConfig":"238"},{"size":4736,"mtime":1645611546396,"results":"254","hashOfConfig":"238"},{"size":636,"mtime":1642391957000,"results":"255","hashOfConfig":"238"},{"size":3602,"mtime":1644522212392,"results":"256","hashOfConfig":"238"},{"size":3099,"mtime":1644612753208,"results":"257","hashOfConfig":"238"},{"size":2597,"mtime":1645611639672,"results":"258","hashOfConfig":"238"},{"size":3761,"mtime":1645611715821,"results":"259","hashOfConfig":"238"},{"size":6909,"mtime":1644760130046,"results":"260","hashOfConfig":"238"},{"size":10466,"mtime":1644667619763,"results":"261","hashOfConfig":"238"},{"size":920,"mtime":1642391957000,"results":"262","hashOfConfig":"238"},{"size":2510,"mtime":1642391957000,"results":"263","hashOfConfig":"238"},{"size":1871,"mtime":1642391957000,"results":"264","hashOfConfig":"238"},{"size":4707,"mtime":1644607597295,"results":"265","hashOfConfig":"238"},{"size":2924,"mtime":1642391957000,"results":"266","hashOfConfig":"238"},{"size":2544,"mtime":1644608025659,"results":"267","hashOfConfig":"238"},{"size":4214,"mtime":1644607967920,"results":"268","hashOfConfig":"238"},{"size":4644,"mtime":1644521142085,"results":"269","hashOfConfig":"238"},{"size":4537,"mtime":1644670817977,"results":"270","hashOfConfig":"238"},{"size":1092,"mtime":1642391957000,"results":"271","hashOfConfig":"238"},{"size":6373,"mtime":1642391957000,"results":"272","hashOfConfig":"238"},{"size":5683,"mtime":1644660202663,"results":"273","hashOfConfig":"238"},{"size":4375,"mtime":1642391957000,"results":"274","hashOfConfig":"238"},{"size":219,"mtime":1644612753784,"results":"275","hashOfConfig":"238"},{"size":1462,"mtime":1644610197261,"results":"276","hashOfConfig":"238"},{"size":120,"mtime":1642391957000,"results":"277","hashOfConfig":"238"},{"size":3664,"mtime":1642391957000,"results":"278","hashOfConfig":"238"},{"size":448,"mtime":1642391957000,"results":"279","hashOfConfig":"238"},{"size":5453,"mtime":1644674284910,"results":"280","hashOfConfig":"238"},{"size":1141,"mtime":1642391957000,"results":"281","hashOfConfig":"238"},{"size":190,"mtime":1642391957000,"results":"282","hashOfConfig":"238"},{"size":1905,"mtime":1642391957000,"results":"283","hashOfConfig":"238"},{"size":2213,"mtime":1642391957000,"results":"284","hashOfConfig":"238"},{"size":1160,"mtime":1642391957000,"results":"285","hashOfConfig":"238"},{"size":689,"mtime":1642391957000,"results":"286","hashOfConfig":"238"},{"size":4637,"mtime":1645610380717,"results":"287","hashOfConfig":"238"},{"size":4703,"mtime":1645612659065,"results":"288","hashOfConfig":"238"},{"size":1992,"mtime":1644759602957,"results":"289","hashOfConfig":"238"},{"size":7456,"mtime":1644859988474,"results":"290","hashOfConfig":"238"},{"size":1996,"mtime":1644748759756,"results":"291","hashOfConfig":"238"},{"size":1196,"mtime":1645610723399,"results":"292","hashOfConfig":"238"},{"size":2616,"mtime":1644612753042,"results":"293","hashOfConfig":"238"},{"size":2163,"mtime":1642391957000,"results":"294","hashOfConfig":"238"},{"size":1132,"mtime":1642391957000,"results":"295","hashOfConfig":"238"},{"size":8005,"mtime":1644679010406,"results":"296","hashOfConfig":"238"},{"size":7007,"mtime":1644665916143,"results":"297","hashOfConfig":"238"},{"size":7007,"mtime":1644665585047,"results":"298","hashOfConfig":"238"},{"size":7003,"mtime":1644665931020,"results":"299","hashOfConfig":"238"},{"size":6988,"mtime":1644672973087,"results":"300","hashOfConfig":"238"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},"1jgqxoy",{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"303"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"303"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"303"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"303"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"303"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"303"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"303"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"303"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"303"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"303"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"303"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"303"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"303"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"303"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"303"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"303"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"303"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"303"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480","usedDeprecatedRules":"303"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"303"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"501"},"wuut8t",{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"501"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"501"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508","usedDeprecatedRules":"501"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"501"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"513","messages":"514","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515","usedDeprecatedRules":"501"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"501"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"501"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"501"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"501"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"501"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"540","usedDeprecatedRules":"501"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"501"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"547","messages":"548","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"501"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"501"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"501"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"501"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"501"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"559","usedDeprecatedRules":"501"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"501"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"501"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566","usedDeprecatedRules":"501"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"569","usedDeprecatedRules":"501"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"501"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"501"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"501"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"501"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"501"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"501"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"501"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"501"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"501"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"501"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"501"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"501"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"501"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"501"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"501"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"501"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"501"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"606","messages":"607","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"608","messages":"609","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"501"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"612","usedDeprecatedRules":"501"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"615","usedDeprecatedRules":"501"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"618","messages":"619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"501"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"622","messages":"623","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"501"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"626","usedDeprecatedRules":"501"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"629","usedDeprecatedRules":"501"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"632","usedDeprecatedRules":"501"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"635","usedDeprecatedRules":"501"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"638","usedDeprecatedRules":"501"},"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\index.js",[],["639","640"],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\App.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\store.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\Home.js",["641"],"import Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { useAlert } from 'react-alert';\nimport Pagination from 'react-js-pagination';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getProducts } from '../actions/productActions';\nimport Loader from './layout/Loader';\nimport MetaData from './layout/MetaData';\nimport MySlider from './layout/MySlider';\nimport Product from './product/Product';\nimport AboutUs from './Sections/AboutUs';\nimport CallToAction from './Sections/CallToAction';\nimport WhychooseUS from './Sections/WhychooseUS';\n\nconst { createSliderWithTooltip } = Slider;\nconst Range = createSliderWithTooltip(Slider.Range);\n\nconst Home = ({ match }) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [price, setPrice] = useState([1, 1000]);\n  const [range, setRange] = useState(1, 1000);\n  const [category, setCategory] = useState('');\n  const [rating, setRating] = useState(0);\n\n  const categories = [\n    'Samsung',\n    'Hyundai',\n    'Nokia',\n    'Haier'\n  ];\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  const {\n    loading,\n    products,\n    error,\n    productsCount,\n    resPerPage,\n    filteredProductsCount,\n  } = useSelector((state) => state.products);\n\n  const keyword = match.params.keyword;\n\n  useEffect(() => {\n    if (error) {\n      return alert.error(error);\n    }\n    // console.log(price);\n    dispatch(getProducts(keyword, currentPage, price, category, rating));\n  }, [dispatch, alert, error, keyword, currentPage, range, category, rating]);\n\n  function setCurrentPageNo(pageNumber) {\n    setCurrentPage(pageNumber);\n  }\n\n  let count = productsCount;\n  if (keyword) {\n    count = filteredProductsCount;\n  }\n  function filterHandler() {\n    setRange(price);\n  }\n  return (\n    <div>\n      <MySlider />\n      <Fragment>\n        {loading ? (\n          <Loader />\n        ) : (\n          <Fragment>\n            <mySlider />\n            <MetaData title={'Home'} />\n\n            <section id=\"products\" className=\"container my-5\">\n              <h1 id=\"products_heading\" className=\"text-center mb-4\">\n                Latest Products\n              </h1>\n\n              <div className=\"row\">\n                {keyword ? (\n                  <Fragment>\n                    <div className=\"col-6 col-md-3 px-3\">\n                      <div>\n                        <div className=\"pr-5\">\n                          <Range\n                            marks={{\n                              1: `$1`,\n                              1000: `$1000`,\n                            }}\n                            min={1}\n                            max={1000}\n                            defaultValue={[1, 1000]}\n                            tipFormatter={(value) => `$${value}`}\n                            tipProps={{\n                              placement: 'top',\n                              visible: true,\n                            }}\n                            value={price}\n                            onChange={(price) => setPrice(price)}\n                          />\n                        </div>\n                        <button\n                          className=\"Filter order-button px-5 mt-5\"\n                          onClick={filterHandler}\n                        >\n                          Filter\n                        </button>\n\n                        <hr className=\"my-5\" />\n\n                        <div className=\"my-5\">\n                          <h4 className=\"mb-3\">Brand</h4>\n\n                          <ul className=\"pl-0\">\n                            {categories &&\n                              categories.map((category) => (\n                                <li\n                                  style={{\n                                    cursor: 'pointer',\n                                    listStyleType: 'none',\n                                  }}\n                                  key={category}\n                                  onClick={() => setCategory(category)}\n                                >\n                                  {category}\n                                </li>\n                              ))}\n                          </ul>\n                        </div>\n\n                        <hr className=\"my-3\" />\n                        <div className=\"mt-5\">\n                          <h4 className=\"mb-3\">Ratings</h4>\n\n                          <ul className=\"pl-0\">\n                            {[5, 4, 3, 2, 1].map((star) => (\n                              <li\n                                style={{\n                                  cursor: 'pointer',\n                                  listStyleType: 'none',\n                                }}\n                                key={star}\n                                onClick={() => setRating(star)}\n                              >\n                                <div className=\"rating-outer\">\n                                  <div\n                                    className=\"rating-inner\"\n                                    style={{\n                                      width: `${star * 20}%`,\n                                    }}\n                                  ></div>\n                                </div>\n                              </li>\n                            ))}\n                          </ul>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"col-6 col-md-9\">\n                      <div className=\"row\">\n                        {products.map((product) => (\n                          <Product\n                            key={product._id}\n                            product={product}\n                            col={4}\n                          />\n                        ))}\n                      </div>\n                    </div>\n                  </Fragment>\n                ) : (\n                  products.map((product) => (\n                    <Product key={product._id} product={product} />\n                  ))\n                )}\n              </div>\n            </section>\n\n            {resPerPage <= count && (\n              <div className=\"d-flex justify-content-center mt-5\">\n                <Pagination\n                  activePage={currentPage}\n                  itemsCountPerPage={resPerPage}\n                  totalItemsCount={productsCount}\n                  onChange={setCurrentPageNo}\n                  nextPageText={'Next'}\n                  prevPageText={'Prev'}\n                  firstPageText={'First'}\n                  lastPageText={'Last'}\n                  itemClass=\"page-item\"\n                  linkClass=\"page-link\"\n                />\n              </div>\n            )}\n          </Fragment>\n        )}\n      </Fragment>\n      <Fragment>\n        <div className=\"container-fluid my-3 bg-white p-5\">\n          <WhychooseUS />\n        </div>\n        <div className=\"container-fluid my-3 bg-dark p-5 text-white\">\n          <CallToAction />\n        </div>\n        <div className=\"container-fluid my-3  p-5\">\n          <AboutUs />\n        </div>\n      </Fragment>\n    </div>\n  );\n};\n\nexport default Home;\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\actions\\userActions.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\AddFAQ.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\Addblogs.js",["642"],"import React, { useState } from 'react';\nimport { useAlert } from 'react-alert';\nimport { postData } from '../../routes/FetchData';\nimport MetaData from '../layout/MetaData';\nimport Sidebar from './Sidebar';\nconst Addblogs = () => {\n  const alert = useAlert();\n  const [name, setName] = useState('');\n\n  const [description, setDescription] = useState('');\n\n  const [image, setimage] = useState('');\n  const [imagePreview, setimagePreview] = useState('/images/default_image.png');\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.set('heading', name);\n    formData.set('description', description);\n    formData.set('image', image);\n    // console.log(`image : ${image}`);\n    postData('/api/v1/admin/blog/new', formData)\n      .then((res) => {\n        setName('');\n        setDescription('');\n        setimage('');\n        setimagePreview('/images/default_image.png');\n        alert.show('Blog added successfully');\n      })\n      .catch((err) => {\n        console.log(err.response);\n        alert.show('somthing went wrong');\n      });\n    // dispatch(updateProfile(formData));\n  };\n\n  const onChange = (e) => {\n    if (e.target.name === 'image') {\n      const reader = new FileReader();\n\n      reader.onload = () => {\n        if (reader.readyState === 2) {\n          setimagePreview(reader.result);\n          setimage(reader.result);\n        }\n      };\n\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  };\n  return (\n    <div>\n      <MetaData title={'Add Blog'} />\n      <div className=\"row m-0\">\n        <div className=\"col-12 col-md-2 p-0\">\n          <Sidebar />\n        </div>\n\n        <div className=\"col-12 col-md-10 \">\n          <div>\n            <form className=\"shadow-lg p-3 my-3 border-radius-20\" onSubmit={submitHandler}>\n              <h1 className=\"m-3\">Add New Blog</h1>\n              <div className=\"form-group mx-3\">\n                <label htmlFor=\"name_field\">Heading</label>\n                <input\n                  type=\"name\"\n                  id=\"name_field\"\n                  className=\"form-control\"\n                  name=\"name\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </div>\n\n              <div className=\"form-group mx-3\">\n                <label htmlFor=\"description_field\">Description</label>\n                <textarea\n                  className=\"form-control\"\n                  id=\"description_field\"\n                  rows=\"8\"\n                  value={description}\n                  onChange={(e) => setDescription(e.target.value)}\n                ></textarea>\n              </div>\n              <div className=\"form-group mx-3\">\n                <label htmlFor=\"image_upload\">Blog Image</label>\n                <div className=\" align-items-center\">\n                  <div>\n                    <figure className=\"image mr-3 item-rtl\">\n                      <img\n                        src={imagePreview}\n                        className=\"mt-3 mr-2 img-thumbnail\"\n                        width=\"300\"\n                        height=\"auto\"\n                        alt=\"image Preview\"\n                      />\n                    </figure>\n                  </div>\n                  <div className=\"custom-file\">\n                    <input\n                      type=\"file\"\n                      name=\"image\"\n                      className=\"custom-file-input\"\n                      id=\"customFile\"\n                      accept=\"image/*\"\n                      onChange={onChange}\n                    />\n                    <label className=\"custom-file-label \" htmlFor=\"customFile\">\n                      Choose image\n                    </label>\n                  </div>\n                </div>\n              </div>\n\n              <button type=\"submit\" className=\"btn update-btn mx-3 mt-4 mb-3 \">\n                Create\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Addblogs;\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\BlogList.js",["643"],"import { MDBDataTable } from 'mdbreact';\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { deleteData, getData } from '../../routes/FetchData';\nimport Loader from '../layout/Loader';\nimport MetaData from '../layout/MetaData';\nimport Sidebar from './Sidebar';\nconst BlogList = () => {\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const [BLOG, setBLOG] = useState([]);\n  const { loading } = useSelector((state) => state.allUsers);\n\n  const getAllData = () => {\n    getData(`/api/v1/blogs`)\n      .then((res) => {\n        // console.log(`data is ${res}`);\n        // console.log(res.data.blog);\n        setBLOG((r) => (r = res.data.blog));\n      })\n      .catch((err) => console.log(err.response.data.msg));\n  };\n  useEffect(() => {\n    getAllData();\n  }, []);\n\n  const deleteUserHandler = (id) => {\n    deleteData(`/api/v1/admin/blog/${id}`)\n      .then((res) => {\n        getAllData();\n        alert.show('Blog deleted successfully');\n      })\n      .catch((err) => {\n        console.log(err.response.data.msg);\n        alert.show('somthing went wrong');\n      });\n  };\n\n  const setUsers = () => {\n    const data = {\n      columns: [\n        {\n          label: 'Image',\n          field: 'image',\n        },\n        {\n          label: 'Heading',\n          field: 'heading',\n          sort: 'asc',\n        },\n        {\n          label: 'Description',\n          field: 'description',\n          sort: 'asc',\n        },\n        {\n          label: 'Actions',\n          field: 'actions',\n        },\n      ],\n      rows: [],\n    };\n\n    BLOG.forEach((user) => {\n      data.rows.push({\n        image: (\n          <>\n            <img\n              src={user.image.url}\n              alt={user.heaeding}\n              className=\"img-thumbnail\"\n              width=\"60\"\n              height=\"60\"\n            ></img>\n          </>\n        ),\n        heading: user.heading,\n        description: user.description.substring(0, 120) + '...',\n\n        actions: (\n          <Fragment>\n            <Link\n              to={`/blog-update/${user._id}`}\n              className=\"btn btn-primary py-1 px-2\"\n            >\n              <i className=\"fa fa-pencil\"></i>\n            </Link>\n            <button\n              className=\"btn btn-danger py-1 px-2 ml-2\"\n              onClick={() => deleteUserHandler(user._id)}\n            >\n              <i className=\"fa fa-trash\"></i>\n            </button>\n          </Fragment>\n        ),\n      });\n    });\n\n    return data;\n  };\n\n  return (\n    <Fragment>\n      <MetaData title={'Blogs'} />\n      <div className=\"row m-0\">\n        <div className=\"col-12 col-md-2 m-0 p-0\">\n          <Sidebar />\n        </div>\n\n        <div className=\"col-12 col-md-10\">\n          <Fragment>\n            <div className=\"d-flex  mx-3\">\n              <h1 className=\"my-5\">Blogs</h1>\n              <Link\n                to=\"/admin/add/blogs\"\n                className=\"btn order-button ml-auto my-auto px-4\"\n              >\n                <i className=\"fa fa-plus\"></i> ADD\n              </Link>\n            </div>\n\n            {loading ? (\n              <Loader />\n            ) : (\n              <MDBDataTable\n                data={setUsers()}\n                className=\"px-3\"\n                bordered\n                striped\n                hover\n              />\n            )}\n          </Fragment>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default BlogList;\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\AddSubscription.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\Dashboard.js",["644"],"import React, { Fragment, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { allOrders } from '../../actions/orderActions';\nimport { getAdminProducts } from '../../actions/productActions';\nimport { allUsers } from '../../actions/userActions';\nimport { getData } from '../../routes/FetchData';\nimport Loader from '../layout/Loader';\nimport MetaData from '../layout/MetaData';\nimport Sidebar from './Sidebar';\n// import {\n//   Chart as ChartJS,\n//   CategoryScale,\n//   LinearScale,\n//   PointElement,\n//   LineElement,\n//   Title,\n//   Tooltip,\n//   Legend,\n// } from 'chart.js';\n\nconst Dashboard = () => {\n  const dispatch = useDispatch();\n\n  const [weeklyProfit, setWeeklyProfit] = useState([]);\n\n  const { products } = useSelector((state) => state.products);\n  const { users } = useSelector((state) => state.allUsers);\n  const { orders, totalAmount, loading } = useSelector(\n    (state) => state.allOrders\n  );\n\n  let outOfStock = 0;\n  products.forEach((product) => {\n    if (product.stock === 0) {\n      outOfStock += 1;\n    }\n  });\n\n  const getAllData = () => {\n    getData(`/api/v1/weekly`)\n      .then((res) => {\n        setWeeklyProfit((r) => (r = res.data.weeklyProf));\n      })\n      .catch((err) => console.log(err.response.data.msg));\n  };\n\n  // const updateData = (id, profit) => {\n  //   const formData = new FormData();\n  //   formData.set('profit', profit);\n  //   patchData(`/api/v1/admin/weekly/update`).then((res) => {\n  //     console.log(\"Updated with response\");\n  //     console.log(res);\n  //     // setWeeklyProfit(weeklyProfit.map((weekly) => {\n  //     //   if(weekly._id===res.data.weeklyProfitData._id) weekly.profit=res.data.weeklyProfitData.profit;\n  //     //   return weekly;\n  //     // }));\n  //   })\n  //   .catch((err) => console.log(err));\n  // }\n\n  useEffect(() => {\n    getAllData();\n    dispatch(getAdminProducts());\n    dispatch(allOrders());\n    dispatch(allUsers());\n  }, [dispatch]);\n\n  // const data = {\n  //   labels: ['January', 'February', 'March',\n  //            'April', 'May'],\n  //   datasets: [\n  //     {\n  //       label: 'Rainfall',\n  //       fill: false,\n  //       lineTension: 0.5,\n  //       backgroundColor: 'rgba(255,0,0,0.3)',\n  //       borderColor: 'rgba(0,0,255,1)',\n  //       borderWidth: 2,\n  //       data: [65, 59, 80, 81, 56]\n  //     }\n  //   ]\n  // }\n\n  // ChartJS.register(\n  //   CategoryScale,\n  //   LinearScale,\n  //   PointElement,\n  //   LineElement,\n  //   Title,\n  //   Tooltip,\n  //   Legend\n  // );\n\n  // const options = {\n  //   responsive: true,\n  //   plugins: {\n  //     legend: {\n  //       position: 'top',\n  //     },\n  //     title: {\n  //       display: true,\n  //       text: 'Weekly Prediction Report',\n  //       fontSize: 20,\n  //     },\n  //   },\n  // };\n\n  // const dayAsString = (dayIndex) => {\n  //   return ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'][dayIndex];\n  // }\n  // const getLabelforNextWeek = (startDate, daysToAdd) => {\n  //   var labels = [];\n\n  //   for (var i = 1; i <= daysToAdd; i++) {\n  //       var currentDate = new Date();\n  //       currentDate.setDate(startDate.getDate() + i);\n  //       labels[i-1] = dayAsString(currentDate.getDay());\n  //   }\n\n  //   return labels;\n  // }\n\n  // const labels = getLabelforNextWeek(new Date(), 7);\n\n  // var profitData = [];\n\n  // weeklyProfit.forEach((weekly) => {\n  //   profitData[labels.indexOf(weekly.day)] = weekly.profit;\n  // });\n\n  // const data = {\n  //   labels,\n  //   datasets: [\n  //     {\n  //       label: 'Profit',\n  //       data: profitData,\n  //       borderColor: 'rgb(255, 99, 132)',\n  //       backgroundColor: 'rgba(255, 99, 132, 0.5)',\n  //     }\n  //   ],\n  // };\n\n  // const predict = () => {\n  //   updateData();\n  // }\n\n  return (\n    <Fragment>\n      <div className=\"row m-0\">\n        <div className=\"col-12 col-md-2 m-0 p-0\">\n          <Sidebar />\n        </div>\n\n        <div className=\"col-12 col-md-10 my-3\">\n          {loading ? (\n            <Loader />\n          ) : (\n            <Fragment>\n              <MetaData title={'Admin Dashboard'} />\n              <div className=\"row pr-4\">\n                <div className=\"col-xl-12 col-sm-12 mb-3\">\n                  <div className=\"topCard o-hidden h-100\">\n                    <div className=\"card-body\">\n                      <div className=\"text-center card-font-size\">\n                        Total Amount\n                        <br /> <b>${totalAmount && totalAmount.toFixed(2)}</b>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row pr-4\">\n                <div className=\"col-xl-3 col-sm-6 mb-3\">\n                  <div className=\"card o-hidden h-100\">\n                    <div className=\"card-body\">\n                      <div className=\"text-center card-font-size\">\n                        Products\n                        <br /> <b>{products && products.length}</b>\n                      </div>\n                    </div>\n                    <Link\n                      className=\"card-footer clearfix small z-1\"\n                      to=\"/admin/products\"\n                    >\n                      <span className=\"float-left\">View Details</span>\n                      <span className=\"float-right\">\n                        <i className=\"fa fa-angle-right\"></i>\n                      </span>\n                    </Link>\n                  </div>\n                </div>\n\n                <div className=\"col-xl-3 col-sm-6 mb-3\">\n                  <div className=\"card o-hidden h-100\">\n                    <div className=\"card-body\">\n                      <div className=\"text-center card-font-size\">\n                        Orders\n                        <br /> <b>{orders && orders.length}</b>\n                      </div>\n                    </div>\n                    <Link\n                      className=\"card-footer clearfix small z-1\"\n                      to=\"/admin/orders\"\n                    >\n                      <span className=\"float-left\">View Details</span>\n                      <span className=\"float-right\">\n                        <i className=\"fa fa-angle-right\"></i>\n                      </span>\n                    </Link>\n                  </div>\n                </div>\n\n                <div className=\"col-xl-3 col-sm-6 mb-3\">\n                  <div className=\"card o-hidden h-100\">\n                    <div className=\"card-body\">\n                      <div className=\"text-center card-font-size\">\n                        Users\n                        <br /> <b>{users && users.length}</b>\n                      </div>\n                    </div>\n                    <Link\n                      className=\"card-footer clearfix small z-1\"\n                      to=\"/admin/users\"\n                    >\n                      <span className=\"float-left\">View Details</span>\n                      <span className=\"float-right\">\n                        <i className=\"fa fa-angle-right\"></i>\n                      </span>\n                    </Link>\n                  </div>\n                </div>\n\n                <div className=\"col-xl-3 col-sm-6 mb-3\">\n                  <div className=\"card o-hidden h-100\">\n                    <div className=\"card-body\">\n                      <div className=\"text-center card-font-size cardDetail\">\n                        Out of Stock\n                        <br /> <b>{outOfStock}</b>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {/* <div className='container-fluid'>\n                <div className='row p-5'>\n                  <div className='col-sm-8 mx-auto'>\n                    <Chart data={data} options={options} />\n                  </div>\n                 \n                </div>\n              </div> */}\n              {/* //------------------------- */}\n              {/* <div className=\"row pr-4\">\n                <div className=\"col-xl-3 col-sm-6 mb-3\">\n                  <div className=\"card  bg-success o-hidden h-100\">\n                    <div className=\"card-body\">\n                      <div className=\"text-center card-font-size\">\n                        Complaints\n                        <br /> <b>{0}</b>\n                      </div>\n                    </div>\n                    <Link\n                      className=\"card-footer  clearfix small z-1\"\n                      to=\"/admin/products\"\n                    >\n                      <span className=\"float-left\">View Details</span>\n                      <span className=\"float-right\">\n                        <i className=\"fa fa-angle-right\"></i>\n                      </span>\n                    </Link>\n                  </div>\n                </div>\n\n                <div className=\"col-xl-3 col-sm-6 mb-3\">\n                  <div className=\"card  bg-warning o-hidden h-100\">\n                    <div className=\"card-body\">\n                      <div className=\"text-center card-font-size\">\n                        Subscription\n                        <br /> <b>{orders && orders.length}</b>\n                      </div>\n                    </div>\n                    <Link\n                      className=\"card-footer  clearfix small z-1\"\n                      to=\"/admin/orders\"\n                    >\n                      <span className=\"float-left\">View Details</span>\n                      <span className=\"float-right\">\n                        <i className=\"fa fa-angle-right\"></i>\n                      </span>\n                    </Link>\n                  </div>\n                </div>\n\n                <div className=\"col-xl-3 col-sm-6 mb-3\">\n                  <div className=\"card  bg-info o-hidden h-100\">\n                    <div className=\"card-body\">\n                      <div className=\"text-center card-font-size\">\n                        Users\n                        <br /> <b>{users && users.length}</b>\n                      </div>\n                    </div>\n                    <Link\n                      className=\"card-footer  clearfix small z-1\"\n                      to=\"/admin/users\"\n                    >\n                      <span className=\"float-left\">View Details</span>\n                      <span className=\"float-right\">\n                        <i className=\"fa fa-angle-right\"></i>\n                      </span>\n                    </Link>\n                  </div>\n                </div>\n\n                <div className=\"col-xl-3 col-sm-6 mb-3\">\n                  <div className=\"card  o-hidden h-100\">\n                    <div className=\"card-body\">\n                      <div className=\"text-center card-font-size cardDetail\">\n                        Out of Stock\n                        <br /> <b>{outOfStock}</b>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div> */}\n            </Fragment>\n          )}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Dashboard;\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\NewProduct.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\BookedServices.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\OrdersList.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\ProcessOrder.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\ProductReviews.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\ProductsList.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\FAQ.js",["645","646","647","648"],"import { MDBDataTable } from 'mdbreact';\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { deleteData, getData } from '../../routes/FetchData';\nimport Loader from '../layout/Loader';\nimport MetaData from '../layout/MetaData';\nimport Sidebar from './Sidebar';\nconst FAQ = () => {\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const [FAQ, setFAQ] = useState([]);\n  const { loading, error, users } = useSelector((state) => state.allUsers);\n  const { isDeleted } = useSelector((state) => state.user);\n\n  const getAllData = () => {\n    getData(`/api/v1/faq`)\n      .then((res) => {\n        // console.log(`data is ${res}`);\n        // console.log(res.data.faqs);\n        setFAQ((r) => (r = res.data.faqs));\n      })\n      .catch((err) => console.log(err.response.data.msg));\n  };\n  useEffect(() => {\n    getAllData();\n  }, []);\n\n  const deleteUserHandler = (id) => {\n    deleteData(`/api/v1/admin/faq/${id}`)\n      .then((res) => {\n        getAllData();\n        alert.show('FAQ deleted successfully');\n      })\n      .catch((err) => {\n        console.log(err.response.data.msg);\n        alert.show('somthing went wrong');\n      });\n  };\n\n  const setUsers = () => {\n    const data = {\n      columns: [\n        {\n          label: 'Question',\n          field: 'question',\n          sort: 'asc',\n        },\n        {\n          label: 'Answer',\n          field: 'answer',\n          sort: 'asc',\n        },\n        {\n          label: 'Actions',\n          field: 'actions',\n        },\n      ],\n      rows: [],\n    };\n\n    FAQ.forEach((user) => {\n      data.rows.push({\n        question: user.question,\n        answer: user.answer,\n\n        actions: (\n          <Fragment>\n            <Link\n              to={`/faq-update/${user._id}`}\n              className=\"btn btn-primary py-1 px-2\"\n            >\n              <i className=\"fa fa-pencil\"></i>\n            </Link>\n            <button\n              className=\"btn btn-danger py-1 px-2 ml-2\"\n              onClick={() => deleteUserHandler(user._id)}\n            >\n              <i className=\"fa fa-trash\"></i>\n            </button>\n          </Fragment>\n        ),\n      });\n    });\n\n    return data;\n  };\n\n  return (\n    <Fragment>\n      <MetaData title={'FAQs'} />\n      <div className=\"row m-0\">\n        <div className=\"col-12 col-md-2 m-0 p-0\">\n          <Sidebar />\n        </div>\n\n        <div className=\"col-12 col-md-10\">\n          <Fragment>\n            <div className=\"d-flex mx-3\">\n              <h1 className=\"my-5\">All Questions</h1>\n              <Link\n                to=\"/admin/add/faq\"\n                className=\"btn order-button ml-auto my-auto px-4\"\n              >\n                <i className=\"fa fa-plus\"></i> ADD\n              </Link>\n            </div>\n\n            {loading ? (\n              <Loader />\n            ) : (\n              <MDBDataTable\n                data={setUsers()}\n                className=\"px-3\"\n                bordered\n                striped\n                hover\n              />\n            )}\n          </Fragment>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default FAQ;\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\SendNotification.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\SubscriptionList.js",["649"],"import { MDBDataTable } from 'mdbreact';\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { deleteData, getData } from '../../routes/FetchData';\nimport Loader from '../layout/Loader';\nimport MetaData from '../layout/MetaData';\nimport Sidebar from './Sidebar';\nconst SubscriptionList = () => {\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const [subscription, setSubscription] = useState([]);\n  const { loading } = useSelector((state) => state.allUsers);\n\n  const getAllData = () => {\n    getData(`/api/v1/subscription`)\n      .then((res) => {\n        // console.log(`data is ${res}`);\n        // console.log(res.data.subscription);\n        setSubscription((r) => (r = res.data.subscription));\n      })\n      .catch((err) => console.log(err.response.data.msg));\n  };\n  useEffect(() => {\n    getAllData();\n  }, []);\n\n  const deleteUserHandler = (id) => {\n    deleteData(`/api/v1/admin/subscription/${id}`)\n      .then((res) => {\n        getAllData();\n        alert.show('subscription deleted successfully');\n      })\n      .catch((err) => {\n        console.log(err.response.data.msg);\n        alert.show('somthing went wrong');\n      });\n  };\n\n  const setUsers = () => {\n    const data = {\n      columns: [\n        {\n          label: 'Heading',\n          field: 'heading',\n          sort: 'asc',\n        },\n        {\n          label: 'Duration',\n          field: 'duration',\n          sort: 'asc',\n        },\n        {\n          label: 'Price',\n          field: 'price',\n          sort: 'asc',\n        },\n        {\n          label: 'Discount',\n          field: 'discount',\n          sort: 'asc',\n        },\n        {\n          label: 'Description',\n          field: 'description',\n          sort: 'asc',\n        },\n        {\n          label: 'Actions',\n          field: 'actions',\n        },\n      ],\n      rows: [],\n    };\n\n    subscription.forEach((user) => {\n      data.rows.push({\n        heading: user.heading,\n        duration: user.duration,\n        price: user.price,\n\n        discount: user.discount,\n        description: user.description.substring(0, 120) + '...',\n\n        actions: (\n          <Fragment>\n            <Link\n              to={`/subscription-update/${user._id}`}\n              className=\"btn btn-primary py-1 px-2\"\n            >\n              <i className=\"fa fa-pencil\"></i>\n            </Link>\n            <button\n              className=\"btn btn-danger py-1 px-2 ml-2\"\n              onClick={() => deleteUserHandler(user._id)}\n            >\n              <i className=\"fa fa-trash\"></i>\n            </button>\n          </Fragment>\n        ),\n      });\n    });\n\n    return data;\n  };\n\n  return (\n    <Fragment>\n      <MetaData title={'Subscriptions'} />\n      <div className=\"row m-0\">\n        <div className=\"col-12 col-md-2 m-0 p-0\">\n          <Sidebar />\n        </div>\n\n        <div className=\"col-12 col-md-10\">\n          <Fragment>\n            <div className=\"d-flex  mx-3\">\n              <h1 className=\"my-5\">Subscription Packages</h1>\n              <Link\n                to=\"/admin/add/subscriptions\"\n                className=\"btn order-button ml-auto my-auto px-4\"\n              >\n                <i className=\"fa fa-plus\"></i> ADD\n              </Link>\n            </div>\n\n            {loading ? (\n              <Loader />\n            ) : (\n              <MDBDataTable\n                data={setUsers()}\n                className=\"px-3\"\n                bordered\n                striped\n                hover\n              />\n            )}\n          </Fragment>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default SubscriptionList;\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\Updateblog.js",["650","651","652","653"],"import React, { useEffect, useState } from 'react';\nimport { useAlert } from 'react-alert';\nimport { withRouter } from 'react-router-dom';\nimport { patchData, postData } from '../../routes/FetchData';\nimport MetaData from '../layout/MetaData';\nimport Sidebar from './Sidebar';\nconst Updateblog = (props) => {\n  const alert = useAlert();\n  const [name, setName] = useState('');\n  const [blogsData, setblogsData] = useState();\n  const [description, setDescription] = useState('');\n\n  const [image, setimage] = useState('');\n  const [imagePreview, setimagePreview] = useState('/images/default_image.png');\n  useEffect(() => {\n    const id = props.match.params.id;\n    // console.log(id);\n\n    postData(`/api/v1/single/blog`, { id })\n      .then((res) => {\n        setName(res.data.blog.heading);\n        setDescription(res.data.blog.description);\n        setimagePreview(res.data.blog.image.url);\n      })\n      .catch((err) => {\n        console.log(err.response.data.msg);\n        alert.show('somthing went wrong');\n      });\n  }, []);\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.set('heading', name);\n    formData.set('description', description);\n    formData.set('image', image);\n    // console.log(`image : ${image}`);\n    patchData(`/api/v1/admin/blog/${props.match.params.id}`, formData)\n      .then((res) => {\n        setName('');\n        setDescription('');\n        setimage('');\n        setimagePreview('/images/default_image.png');\n        alert.show('Blog updated successfully');\n      })\n      .catch((err) => {\n        console.log(err.response);\n        alert.show('somthing went wrong');\n      });\n    // dispatch(updateProfile(formData));\n  };\n\n  const onChange = (e) => {\n    if (e.target.name === 'image') {\n      const reader = new FileReader();\n\n      reader.onload = () => {\n        if (reader.readyState === 2) {\n          setimagePreview(reader.result);\n          setimage(reader.result);\n        }\n      };\n\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  };\n  return (\n    <div>\n      <MetaData title={'Update Blog'} />\n      <div className=\"row\">\n        <div className=\"col-12 col-md-2\">\n          <Sidebar />\n        </div>\n\n        <div className=\"col-12 col-md-10 \">\n          <div>\n            <h1 className=\"my-5\">Update Blog</h1>\n\n            <form className=\"shadow-lg\" onSubmit={submitHandler}>\n              <div className=\"form-group mx-3\">\n                <label htmlFor=\"name_field\">Heading</label>\n                <input\n                  type=\"name\"\n                  id=\"name_field\"\n                  className=\"form-control\"\n                  name=\"name\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </div>\n\n              <div className=\"form-group mx-3\">\n                <label htmlFor=\"description_field\">Description</label>\n                <textarea\n                  className=\"form-control\"\n                  id=\"description_field\"\n                  rows=\"8\"\n                  value={description}\n                  onChange={(e) => setDescription(e.target.value)}\n                ></textarea>\n              </div>\n              <div className=\"form-group mx-3\">\n                <label htmlFor=\"image_upload\">Blog Image</label>\n                <div className=\" align-items-center\">\n                  <div>\n                    <figure className=\"image mr-3 item-rtl\">\n                      <img\n                        src={imagePreview}\n                        className=\"mt-3 mr-2 img-thumbnail\"\n                        width=\"300\"\n                        height=\"auto\"\n                        alt=\"image Preview\"\n                      />\n                    </figure>\n                  </div>\n                  <div className=\"custom-file\">\n                    <input\n                      type=\"file\"\n                      name=\"image\"\n                      className=\"custom-file-input\"\n                      id=\"customFile\"\n                      accept=\"image/*\"\n                      onChange={onChange}\n                    />\n                    <label className=\"custom-file-label \" htmlFor=\"customFile\">\n                      Choose image\n                    </label>\n                  </div>\n                </div>\n              </div>\n\n              <button type=\"submit\" className=\"btn update-btn mx-3 mt-4 mb-3 \">\n                Update\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(Updateblog);\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\UpdatedSubscription.js",["654"],"import React, { useEffect, useState } from 'react';\nimport { useAlert } from 'react-alert';\nimport { withRouter } from 'react-router-dom';\nimport { patchData, postData } from '../../routes/FetchData';\nimport MetaData from '../layout/MetaData';\nimport Sidebar from './Sidebar';\nconst UpdateSubscription = (props) => {\n  const alert = useAlert();\n  const [heading, setHeading] = useState('');\n  const [description, setDescription] = useState('');\n  const [discount, setDiscount] = useState(0);\n  const [price, setPrice] = useState(0);\n  const [duration, setDuration] = useState(0);\n  useEffect(() => {\n    const id = props.match.params.id;\n    // console.log(id);\n    // setLoading(true);\n    postData(`/api/v1/admin/single/subscription`, { id })\n      .then((res) => {\n        setHeading(res.data.subscription.heading);\n        setDuration(res.data.subscription.duration);\n        setPrice(res.data.subscription.price);\n        setDiscount(res.data.subscription.discount);\n        setDescription(res.data.subscription.description);\n\n        // setLoading(false);\n      })\n      .catch((err) => {\n        console.log(err.response.data.msg);\n        alert.show('somthing went wrong');\n      });\n  }, []);\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.set('heading', heading);\n    formData.set('duration', duration);\n    formData.set('price', price);\n    formData.set('discount', discount);\n    formData.set('description', description);\n    patchData(`/api/v1/admin/subscription/${props.match.params.id}`, formData)\n      .then((res) => {\n        setHeading('');\n        setDuration('');\n        setPrice('');\n        setDiscount('');\n        setDescription('');\n        alert.show('Subscrition added successfully');\n      })\n      .catch((err) => {\n        console.log(err.response.data.msg);\n        alert.show('somthing went wrong');\n      });\n    // dispatch(updateProfile(formData));\n  };\n  return (\n    <div>\n      <MetaData title={'Update Subscription'} />\n      <div className=\"row m-0\">\n        <div className=\"col-12 col-md-2 p-0\">\n          <Sidebar />\n        </div>\n\n        <div className=\"col-12 col-md-10\">\n          <div>\n            <form className=\"shadow-lg my-3 p-3\" onSubmit={submitHandler}>\n              <h1 className=\"m-3\">Update Subscription</h1>\n              <div className=\"form-group mx-3\">\n                <label htmlFor=\"name_field\">Heading</label>\n                <input\n                  type=\"name\"\n                  id=\"name_field\"\n                  className=\"form-control\"\n                  name=\"heading\"\n                  value={heading}\n                  onChange={(e) => setHeading(e.target.value)}\n                />\n              </div>\n              <div className=\"form-group mx-3\">\n                <label htmlFor=\"name_field\">Duration</label>\n                <input\n                  type=\"number\"\n                  id=\"name_field\"\n                  className=\"form-control\"\n                  name=\"duration\"\n                  value={duration}\n                  onChange={(e) => setDuration(e.target.value)}\n                />\n              </div>\n              <div className=\"form-group mx-3\">\n                <label htmlFor=\"name_field\">Price</label>\n                <input\n                  type=\"number\"\n                  id=\"name_field\"\n                  className=\"form-control\"\n                  name=\"price\"\n                  value={price}\n                  onChange={(e) => setPrice(e.target.value)}\n                />\n              </div>\n              <div className=\"form-group mx-3\">\n                <label htmlFor=\"name_field\">Discount</label>\n                <input\n                  type=\"number\"\n                  id=\"name_field\"\n                  className=\"form-control\"\n                  name=\"discount\"\n                  value={discount}\n                  onChange={(e) => setDiscount(e.target.value)}\n                />\n              </div>\n              <div className=\"form-group mx-3\">\n                <label htmlFor=\"description_field\">Description</label>\n                <textarea\n                  className=\"form-control\"\n                  id=\"description_field\"\n                  rows=\"8\"\n                  value={description}\n                  onChange={(e) => setDescription(e.target.value)}\n                ></textarea>\n              </div>\n\n              <button\n                type=\"submit\"\n                className=\" update-btn order-button mx-3 px-5\"\n              >\n                ADD\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(UpdateSubscription);\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\UpdateFaq.js",["655"],"import React, { useEffect, useState } from 'react';\nimport { useAlert } from 'react-alert';\nimport { withRouter } from 'react-router-dom';\nimport { patchData, postData } from '../../routes/FetchData';\nimport MetaData from '../layout/MetaData';\nimport Sidebar from './Sidebar';\nconst UpdateFaq = (props) => {\n  const alert = useAlert();\n  const [question, setQuestion] = useState('');\n\n  const [answer, setAnswer] = useState('');\n\n  useEffect(() => {\n    const id = props.match.params.id;\n    // console.log(id);\n    // setLoading(true);\n    postData(`/api/v1/single/faq`, { id })\n      .then((res) => {\n        setQuestion(res.data.faqs.question);\n        setAnswer(res.data.faqs.answer);\n        // setLoading(false);\n      })\n      .catch((err) => {\n        console.log(err.response.data.msg);\n        alert.show('somthing went wrong');\n      });\n  }, []);\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.set('question', question);\n    formData.set('answer', answer);\n    patchData(`/api/v1/admin/faq/${props.match.params.id}`, formData)\n      .then((res) => {\n        setQuestion('');\n        setAnswer('');\n        alert.show('FAQ updated successfully');\n      })\n      .catch((err) => {\n        console.log(err.response.data.msg);\n        alert.show('somthing went wrong');\n      });\n    // dispatch(updateProfile(formData));\n  };\n  return (\n    <div>\n      <MetaData title={'Update FAQs'} />\n      <div className=\"row m-0\">\n        <div className=\"col-12 col-md-2 p-0\">\n          <Sidebar />\n        </div>\n\n        <div className=\"col-12 col-md-10\">\n          <div>\n            <form className=\"shadow-lg my-3 p-3\" onSubmit={submitHandler}>\n              <h1 className=\"m-3\">Update FAQ</h1>\n              <div className=\"form-group mx-3\">\n                <label htmlFor=\"name_field\">Question</label>\n                <input\n                  type=\"name\"\n                  id=\"name_field\"\n                  className=\"form-control\"\n                  name=\"question\"\n                  value={question}\n                  onChange={(e) => setQuestion(e.target.value)}\n                />\n              </div>\n\n              <div className=\"form-group mx-3\">\n                <label htmlFor=\"description_field\">Answer</label>\n                <textarea\n                  className=\"form-control\"\n                  id=\"description_field\"\n                  rows=\"8\"\n                  value={answer}\n                  onChange={(e) => setAnswer(e.target.value)}\n                ></textarea>\n              </div>\n\n              <button\n                type=\"submit\"\n                className=\"update-btn order-button mx-3 px-5\"\n              >\n                Update\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(UpdateFaq);\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\UpdateProduct.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\UpdateUser.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\cart\\Cart.js",["656"],"import React, { Fragment, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { addItemToCart, removeItemFromCart } from '../../actions/cartActions';\nimport { getData } from '../../routes/FetchData';\nimport MetaData from '../layout/MetaData';\n\nconst Cart = ({ history }) => {\n  const dispatch = useDispatch();\n  const { user } = useSelector((state) => state.auth);\n  const { cartItems } = useSelector((state) => state.cart);\n  const [Discount, setDiscount] = useState(0);\n  const removeCartItemHandler = (id) => {\n    dispatch(removeItemFromCart(id));\n  };\n  useEffect(() => {\n    getData(`/api/v1/user/subscription/single/${user._id}`)\n      .then((res) => {\n        setDiscount(res.data.subscription[0].subscriptionId.discount);\n        // setSubData(res.data.subscription);\n        // setAmount(res.data.subscription[0].price);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  const increaseQty = (id, quantity, stock) => {\n    const newQty = quantity + 1;\n\n    if (newQty > stock) return;\n\n    dispatch(addItemToCart(id, newQty));\n  };\n\n  const decreaseQty = (id, quantity) => {\n    const newQty = quantity - 1;\n\n    if (newQty <= 0) return;\n\n    dispatch(addItemToCart(id, newQty));\n  };\n\n  const checkoutHandler = () => {\n    history.push('/login?redirect=shipping');\n  };\n\n  return (\n    <Fragment>\n      <div className=\"container\">\n        <MetaData title={'Your Cart'} />\n        {cartItems.length === 0 ? (\n          <h2 className=\" my-5 text-center\">Your Cart is Empty</h2>\n        ) : (\n          <Fragment>\n            <h2 className=\"mt-5\">\n              Your Cart: <b>{cartItems.length} items</b>\n            </h2>\n\n            <div className=\"row d-flex justify-content-between\">\n              <div className=\"col-12 col-lg-8\">\n                {cartItems.map((item) => (\n                  <Fragment>\n                    <hr />\n\n                    <div className=\"cart-item\" key={item.product}>\n                      <div className=\"row\">\n                        <div className=\"col-4 col-lg-3\">\n                          <img\n                            src={item.image}\n                            alt=\"Laptop\"\n                            height=\"90\"\n                            width=\"115\"\n                          />\n                        </div>\n\n                        <div className=\"col-5 col-lg-3\">\n                          <Link to={`/products/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </div>\n\n                        <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\n                          <p id=\"card_item_price\">${item.price}</p>\n                        </div>\n\n                        <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\n                          <div className=\"stockCounter d-inline\">\n                            <span\n                              className=\"btn btn-danger minus\"\n                              onClick={() =>\n                                decreaseQty(item.product, item.quantity)\n                              }\n                            >\n                              -\n                            </span>\n\n                            <input\n                              type=\"number\"\n                              className=\"form-control count d-inline\"\n                              value={item.quantity}\n                              readOnly\n                            />\n\n                            <span\n                              className=\"btn btn-primary plus\"\n                              onClick={() =>\n                                increaseQty(\n                                  item.product,\n                                  item.quantity,\n                                  item.stock\n                                )\n                              }\n                            >\n                              +\n                            </span>\n                          </div>\n                        </div>\n\n                        <div className=\"col-4 col-lg-1 mt-4 mt-lg-0\">\n                          <i\n                            id=\"delete_cart_item\"\n                            className=\"fa fa-trash btn btn-danger\"\n                            onClick={() => removeCartItemHandler(item.product)}\n                          ></i>\n                        </div>\n                      </div>\n                    </div>\n                    <hr />\n                  </Fragment>\n                ))}\n              </div>\n\n              <div className=\"col-12 col-lg-3 my-4\">\n                <div id=\"order_summary\">\n                  <h4>Your Cart</h4>\n                  <hr />\n                  <p>\n                    Subtotal:{' '}\n                    <span className=\"order-summary-values\">\n                      {cartItems.reduce(\n                        (acc, item) => acc + Number(item.quantity),\n                        0\n                      )}{' '}\n                      (Units)\n                    </span>\n                  </p>\n                  <p>\n                    Discount:{' '}\n                    <span className=\"order-summary-values\">{Discount}%</span>\n                  </p>\n                  <p>\n                    Est. total:{' '}\n                    <span className=\"order-summary-values\">\n                      $\n                      {cartItems\n                        .reduce(\n                          (acc, item) => acc + item.quantity * item.price,\n                          0\n                        )\n                        .toFixed(2)}\n                    </span>\n                  </p>\n                  {Discount > 0 ? (\n                    <p>\n                      With Discount:{' '}\n                      <span className=\"order-summary-values\">\n                        $\n                        {cartItems\n                          .reduce(\n                            (acc, item) => acc + item.quantity * item.price,\n                            0\n                          )\n                          .toFixed(2) -\n                          cartItems.reduce(\n                            (acc, item) =>\n                              ((acc + item.quantity * item.price) * Discount) /\n                              100,\n                            0\n                          )}\n                      </span>\n                    </p>\n                  ) : null}\n\n                  <hr />\n                  <button\n                    id=\"checkout_btn\"\n                    className=\"btn btn-primary btn-block\"\n                    onClick={checkoutHandler}\n                  >\n                    Check out\n                  </button>\n                </div>\n              </div>\n            </div>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Cart;\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\UsersList.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\cart\\ConfirmOrder.js",["657"],"import React, { Fragment, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getData } from '../../routes/FetchData';\nimport MetaData from '../layout/MetaData';\nimport CheckoutSteps from './CheckoutSteps';\n\nconst ConfirmOrder = ({ history }) => {\n  const { user } = useSelector((state) => state.auth);\n  const [Discount, setDiscount] = useState(0);\n  const { cartItems, shippingInfo } = useSelector((state) => state.cart);\n\n  useEffect(() => {\n    getData(`/api/v1/user/subscription/single/${user._id}`)\n      .then((res) => {\n        setDiscount(res.data.subscription[0].subscriptionId.discount);\n        // setSubData(res.data.subscription);\n        // setAmount(res.data.subscription[0].price);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  // Calculate Order Prices\n  const itemsPrice =\n    cartItems.reduce((acc, item) => acc + item.quantity * item.price, 0) -\n    cartItems.reduce(\n      (acc, item) => ((acc + item.quantity * item.price) * Discount) / 100,\n      0\n    );\n  const shippingPrice = itemsPrice > 200 ? 0 : 25;\n  const taxPrice = Number((0.05 * itemsPrice).toFixed(2));\n  const totalPrice = (itemsPrice + shippingPrice + taxPrice).toFixed(2);\n\n  const processToPayment = () => {\n    const data = {\n      itemsPrice: itemsPrice.toFixed(2),\n      shippingPrice,\n      taxPrice,\n      totalPrice,\n    };\n\n    sessionStorage.setItem('orderInfo', JSON.stringify(data));\n    history.push('/payment');\n  };\n\n  return (\n    <Fragment>\n      <div className=\"container\">\n        <MetaData title={'Confirm Order'} />\n\n        <CheckoutSteps shipping confirmOrder />\n\n        <div className=\"row d-flex justify-content-between\">\n          <div className=\"col-12 col-lg-8 mt-5 order-confirm\">\n            <h4 className=\"mb-3\">Shipping Info</h4>\n            <p>\n              <b>Name:</b> {user && user.name}\n            </p>\n            <p>\n              <b>Phone:</b> {shippingInfo.phoneNo}\n            </p>\n            <p className=\"mb-4\">\n              <b>Address:</b>{' '}\n              {`${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`}\n            </p>\n\n            <hr />\n            <h4 className=\"mt-4\">Your Cart Items:</h4>\n\n            {cartItems.map((item) => (\n              <Fragment>\n                <hr />\n                <div className=\"cart-item my-1\" key={item.product}>\n                  <div className=\"row\">\n                    <div className=\"col-4 col-lg-2\">\n                      <img\n                        src={item.image}\n                        alt=\"Laptop\"\n                        height=\"45\"\n                        width=\"65\"\n                      />\n                    </div>\n\n                    <div className=\"col-5 col-lg-6\">\n                      <Link to={`/product/${item.product}`}>{item.name}</Link>\n                    </div>\n\n                    <div className=\"col-4 col-lg-4 mt-4 mt-lg-0\">\n                      <p>\n                        {item.quantity} x ${item.price} ={' '}\n                        <b>${(item.quantity * item.price).toFixed(2)}</b>\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <hr />\n              </Fragment>\n            ))}\n          </div>\n\n          <div className=\"col-12 col-lg-3 my-4\">\n            <div id=\"order_summary\">\n              <h4>Order Summary</h4>\n              <hr />\n              <p>\n                Discount:{' '}\n                <span className=\"order-summary-values\">${Discount}</span>\n              </p>\n              <p>\n                Subtotal:{' '}\n                <span className=\"order-summary-values\">${itemsPrice}</span>\n              </p>\n              <p>\n                Shipping:{' '}\n                <span className=\"order-summary-values\">${shippingPrice}</span>\n              </p>\n              <p>\n                Tax: <span className=\"order-summary-values\">${taxPrice}</span>\n              </p>\n\n              <hr />\n\n              <p>\n                Total:{' '}\n                <span className=\"order-summary-values\">${totalPrice}</span>\n              </p>\n\n              <hr />\n              <button\n                id=\"checkout_btn\"\n                className=\"btn btn-primary btn-block\"\n                onClick={processToPayment}\n              >\n                Proceed to Payment\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ConfirmOrder;\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\cart\\OrderSuccess.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\cart\\Shipping.js",["658"],"import { countries } from 'countries-list';\nimport React, { Fragment, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { saveShippingInfo } from '../../actions/cartActions';\nimport MetaData from '../layout/MetaData';\nimport CheckoutSteps from './CheckoutSteps';\n\nconst Shipping = ({ history }) => {\n  const { user, loading } = useSelector((state) => state.auth);\n  const countriesList = Object.values(countries);\n\n  const { shippingInfo } = useSelector((state) => state.cart);\n\n  const [address, setAddress] = useState(user.address);\n  const [city, setCity] = useState(user.city);\n  const [postalCode, setPostalCode] = useState(shippingInfo.postalCode);\n  const [phoneNo, setPhoneNo] = useState(user.phone);\n  const [country, setCountry] = useState(user.country);\n\n  const dispatch = useDispatch();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    dispatch(saveShippingInfo({ address, city, phoneNo, postalCode, country }));\n    history.push('/confirm');\n  };\n\n  return (\n    <Fragment>\n      <MetaData title={'Shipping Info'} />\n\n      <CheckoutSteps shipping />\n\n      <div className=\"row wrapper\">\n        <div className=\"col-10 col-lg-5\">\n          <form className=\"shadow-lg\" onSubmit={submitHandler}>\n            <h1 className=\"mb-4\">Shipping Info</h1>\n            <div className=\"form-group\">\n              <label htmlFor=\"address_field\">Address</label>\n              <input\n                type=\"text\"\n                id=\"address_field\"\n                className=\"form-control\"\n                value={address}\n                onChange={(e) => setAddress(e.target.value)}\n                required\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"city_field\">City</label>\n              <input\n                type=\"text\"\n                id=\"city_field\"\n                className=\"form-control\"\n                value={city}\n                onChange={(e) => setCity(e.target.value)}\n                required\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"phone_field\">Phone No</label>\n              <input\n                type=\"phone\"\n                id=\"phone_field\"\n                className=\"form-control\"\n                value={phoneNo}\n                onChange={(e) => setPhoneNo(e.target.value)}\n                required\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"postal_code_field\">Postal Code</label>\n              <input\n                type=\"number\"\n                id=\"postal_code_field\"\n                className=\"form-control\"\n                value={postalCode}\n                onChange={(e) => setPostalCode(e.target.value)}\n                required\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"country_field\">Country</label>\n              <select\n                id=\"country_field\"\n                className=\"form-control\"\n                value={country}\n                onChange={(e) => setCountry(e.target.value)}\n                required\n              >\n                {countriesList.map((country) => (\n                  <option key={country.name} value={country.name}>\n                    {country.name}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <button\n              id=\"shipping_btn\"\n              type=\"submit\"\n              className=\"btn btn-block py-3\"\n            >\n              CONTINUE\n            </button>\n          </form>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Shipping;\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\cart\\Payment.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\cart\\SubscriptionPayment.js",["659","660"],"import {\r\n  CardCvcElement,\r\n  CardExpiryElement,\r\n  CardNumberElement,\r\n  useElements,\r\n  useStripe,\r\n} from '@stripe/react-stripe-js';\r\nimport axios from 'axios';\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory, withRouter } from 'react-router-dom';\r\nimport { postData } from '../../routes/FetchData';\r\nimport MetaData from '../layout/MetaData';\r\n\r\nconst options = {\r\n  style: {\r\n    base: {\r\n      fontSize: '16px',\r\n    },\r\n    invalid: {\r\n      color: '#9e2146',\r\n    },\r\n  },\r\n};\r\n\r\nconst SubscriptionPayment = (props) => {\r\n  let history = useHistory();\r\n  const alert = useAlert();\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const [SubData, setSubData] = useState();\r\n  const [amount, setAmount] = useState(0);\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  useEffect(() => {\r\n    const id = props.match.params.id;\r\n\r\n    postData(`/api/v1/single/subscription`, { id })\r\n      .then((res) => {\r\n        setSubData(res.data.subscription);\r\n        setAmount(res.data.subscription[0].price);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data.msg);\r\n        alert.show('somthing went wrong');\r\n      });\r\n  }, []);\r\n\r\n  // console.log('jjjjjjjjjjjjjjjjjj');\r\n  // console.log(SubData[0].price);\r\n\r\n  const paymentData = {\r\n    amount: amount,\r\n  };\r\n  const paymentInfo = {\r\n    id: '',\r\n    status: '',\r\n  };\r\n  const Data = {\r\n    user: user._id,\r\n    subscriptionId: props.match.params.id,\r\n    paymentInfo,\r\n    totalPrice: paymentData.amount,\r\n  };\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    document.querySelector('#pay_btn').disabled = true;\r\n\r\n    let res;\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      };\r\n\r\n      res = await axios.post('/api/v1/payment/process/v', paymentData, config);\r\n\r\n      const clientSecret = res.data.client_secret;\r\n\r\n      console.log(clientSecret);\r\n\r\n      if (!stripe || !elements) {\r\n        return;\r\n      }\r\n\r\n      const result = await stripe.confirmCardPayment(clientSecret, {\r\n        payment_method: {\r\n          card: elements.getElement(CardNumberElement),\r\n          billing_details: {\r\n            name: user.name,\r\n            email: user.email,\r\n          },\r\n        },\r\n      });\r\n\r\n      if (result.error) {\r\n        alert.error(result.error.message);\r\n        document.querySelector('#pay_btn').disabled = false;\r\n      } else {\r\n        // The payment is processed or not\r\n        if (result.paymentIntent.status === 'succeeded') {\r\n          Data.paymentInfo = {\r\n            id: result.paymentIntent.id,\r\n            status: result.paymentIntent.status,\r\n          };\r\n          postData(`/api/v1/user/subscription/buy`, Data)\r\n            .then((res) => {\r\n              history.push('/success/subscription');\r\n            })\r\n            .catch((err) => {\r\n              alert.show('somthing went wrong');\r\n            });\r\n          //   dispatch(createOrder(order));\r\n          //   dispatch(emptyCart());\r\n        } else {\r\n          alert.error('There is some issue while payment processing');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      document.querySelector('#pay_btn').disabled = false;\r\n      alert.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container\">\r\n        <MetaData title={'Subscription Payment'} />\r\n\r\n        <div className=\"row wrapper\">\r\n          <div className=\"col-10 col-lg-5\">\r\n            <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n              <h1 className=\"mb-4\">Card Info</h1>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"card_num_field\">Card Number</label>\r\n                <CardNumberElement\r\n                  type=\"text\"\r\n                  id=\"card_num_field\"\r\n                  className=\"form-control\"\r\n                  options={options}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"card_exp_field\">Card Expiry</label>\r\n                <CardExpiryElement\r\n                  type=\"text\"\r\n                  id=\"card_exp_field\"\r\n                  className=\"form-control\"\r\n                  options={options}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"card_cvc_field\">Card CVC</label>\r\n                <CardCvcElement\r\n                  type=\"text\"\r\n                  id=\"card_cvc_field\"\r\n                  className=\"form-control\"\r\n                  options={options}\r\n                />\r\n              </div>\r\n\r\n              <button id=\"pay_btn\" type=\"submit\" className=\"btn btn-block py-3\">\r\n                Pay {amount}$\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(SubscriptionPayment);\r\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\layout\\Footer.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\layout\\Header.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\order\\ListOrders.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\order\\OrderDetails.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\BookNow.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\BlogPage.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\ChattForum.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\ContactUs.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\FAQ.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\SubscriptionPage.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\Services.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\SubscriptionSuccess.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\product\\ProductDetails.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\route\\ProtectedRoute.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\user\\ForgotPassword.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\ServiceView.js",["661","662","663"],"import React, { Fragment, useEffect, useState } from 'react';\nimport { useAlert } from 'react-alert';\nimport { withRouter } from 'react-router-dom';\nimport { postData } from '../../routes/FetchData';\nimport MetaData from '../layout/MetaData';\nimport Sidebar from './Sidebar';\nconst ServiceView = (props) => {\n  const [id, setId] = useState('');\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phoneNo, setPhoneNo] = useState('');\n  const [segment, setSegment] = useState('None');\n  const [address, setAddress] = useState('');\n  const [date, setDate] = useState('');\n  const [estimatedTime, setEstimatedTime] = useState('none');\n  const [noAirconditionar, setNoAirconditionar] = useState('');\n  const [conditionarType, setConditionarType] = useState('');\n  const [serviceNeeded, setServiceNeeded] = useState('');\n  const [channels, setchannels] = useState('');\n  const [comment, setComment] = useState('');\n  const alert = useAlert();\n  const [data, setData] = useState([]);\n  // console.log(data);\n  useEffect(() => {\n    const id = props.match.params.id;\n\n    postData(`/api/v1/admin/single/service`, { id })\n      .then((res) => {\n        setId(res.data.service._id);\n        setName(res.data.service.name);\n        setEmail(res.data.service.email);\n        setPhoneNo(res.data.service.phoneNo);\n        setSegment(res.data.service.segment);\n        setAddress(res.data.service.address);\n        setDate(res.data.service.date);\n        setEstimatedTime(res.data.service.estimatedTime);\n        setNoAirconditionar(res.data.service.noAirconditionar);\n        setConditionarType(res.data.service.conditionarType);\n        setServiceNeeded(res.data.service.serviceNeeded);\n        setchannels(res.data.service.channels);\n        setComment(res.data.service.comment);\n      })\n      .catch((err) => {\n        console.log(err.response.data.msg);\n        alert.show('somthing went wrong');\n      });\n  }, []);\n  return (\n    <Fragment>\n      <MetaData title={'View Services'} />\n      <div className=\"row m-0\">\n        <div className=\"col-12 col-md-2 m-0 p-0\">\n          <Sidebar />\n        </div>\n\n        <div className=\"col-12 col-md-10\">\n          <Fragment>\n            <div className=\"d-flex mt-5\">\n              <h5 className=\" ml-3  w-25\">Services ID</h5>\n              <p>{id}</p>\n            </div>\n            <div className=\"d-flex my-2\">\n              <h5 className=\" ml-3  w-25\">Name</h5>\n              <p>{name}</p>\n            </div>\n            <div className=\"d-flex my-2\">\n              <h5 className=\" ml-3  w-25\">Email</h5>\n              <p>{email}</p>\n            </div>\n            <div className=\"d-flex my-2\">\n              <h5 className=\" ml-3  w-25\">Phone no</h5>\n              <p>{phoneNo}</p>\n            </div>\n            <div className=\"d-flex my-2\">\n              <h5 className=\" ml-3  w-25\">Segment</h5>\n              <p>{segment}</p>\n            </div>\n            <div className=\"d-flex my-2\">\n              <h5 className=\" ml-3  w-25\">Address</h5>\n              <p>{address}</p>\n            </div>\n            <div className=\"d-flex my-2\">\n              <h5 className=\" ml-3  w-25\">Date</h5>\n              <p>{date}</p>\n            </div>\n            <div className=\"d-flex my-2\">\n              <h5 className=\" ml-3  w-25\">Estimated Time</h5>\n              <p>{estimatedTime}</p>\n            </div>\n            <div className=\"d-flex my-2\">\n              <h5 className=\" ml-3  w-25\">No of Airconditionar</h5>\n              <p>{noAirconditionar}</p>\n            </div>\n            <div className=\"d-flex my-2\">\n              <h5 className=\" ml-3  w-25\">Conditionar Type</h5>\n              <p>{conditionarType}</p>\n            </div>\n            <div className=\"d-flex my-2\">\n              <h5 className=\" ml-3  w-25\">Service Needed</h5>\n              <p>{serviceNeeded}</p>\n            </div>\n            <div className=\"d-flex my-2\">\n              <h5 className=\" ml-3  w-25\">Channels</h5>\n              <p>{channels}</p>\n            </div>\n            <div className=\"d-flex my-2\">\n              <h5 className=\" ml-3  w-25\">Comment</h5>\n              <p>{comment}</p>\n            </div>\n          </Fragment>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default withRouter(ServiceView);\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\user\\Login.js",["664"],"import React, { Fragment, useEffect, useState } from 'react';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { clearErrors, login } from '../../actions/userActions';\nimport Loader from '../layout/Loader';\nimport MetaData from '../layout/MetaData';\n\nconst Login = ({ history, location }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [validation, setValidation] = useState(0);\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  const { user, isAuthenticated, error, loading } = useSelector(\n    (state) => state.auth\n  );\n  let redirect = '';\n  if (!isAuthenticated || user.role !== 'admin')\n    redirect = location.search ? location.search.split('=')[1] : '/';\n  else\n    redirect = location.search ? location.search.split('=')[1] : '/dashboard';\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      history.push(redirect);\n    } else {\n      setValidation(validation + 1);\n      // console.log(validation);\n      if (validation < 0) alert.show('User id or password is incorrect');\n    }\n\n    if (error) {\n      alert.error(error);\n\n      dispatch(clearErrors());\n    }\n  }, [dispatch, alert, isAuthenticated, error, history]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (email === '' || password === '') {\n      alert.show('please fill out all the fields');\n      setValidation(true);\n    } else dispatch(login(email, password));\n  };\n\n  return (\n    <Fragment>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Fragment>\n          <MetaData title={'Login'} />\n          <div className=\"my-5\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-lg-3\"></div>\n                <div className=\"col-lg-6\">\n                  <form className=\"shadow-lg border-radius-20 p-4\" onSubmit={submitHandler}>\n                    <h1 className=\"mb-3 text-center\">Login</h1>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"email_field\">Email</label>\n                      <input\n                        type=\"email\"\n                        id=\"email_field\"\n                        className=\"form-control\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                      />\n                    </div>\n\n                    <div className=\"form-group\">\n                      <label htmlFor=\"password_field\">Password</label>\n                      <input\n                        type=\"password\"\n                        id=\"password_field\"\n                        className=\"form-control\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                      />\n                    </div>\n\n                    <div className=\"text-right\">\n                      <Link to=\"/password/forgot\" className=\"mb-4\">\n                        Forgot Password?\n                      </Link>\n                    </div>\n                    <div className=\"text-center mt-4\">\n                      <button\n                        id=\"login_button\"\n                        type=\"submit\"\n                        className=\" order-button px-5\"\n                      >\n                        LOGIN\n                      </button>\n                    </div>\n                    <div className=\"text-center\">\n                      <Link to=\"/register\" className=\"mt-3 btn\">\n                        Create a new account\n                      </Link>\n                    </div>\n                  </form>\n                </div>\n                <div className=\"col-lg-3\"></div>\n              </div>\n            </div>\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Login;\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\user\\NewPassword.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\user\\Register.js",["665"],"import { countries } from 'countries-list';\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { clearErrors, register } from '../../actions/userActions';\nimport MetaData from '../layout/MetaData';\n\nconst Register = ({ history }) => {\n  const countriesList = Object.values(countries);\n  const [user, setUser] = useState({\n    name: '',\n    email: '',\n    address: '',\n    country: '',\n    city: '',\n    phone: '',\n    password: '',\n  });\n\n  const { name, email, address, country, city, phone, password } = user;\n\n  const [avatar, setAvatar] = useState('');\n  const [avatarPreview, setAvatarPreview] = useState(\n    '/images/default_avatar.jpg'\n  );\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  const { isAuthenticated, error, loading } = useSelector(\n    (state) => state.auth\n  );\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      history.push('/');\n    }\n\n    if (error) {\n      console.log('error here');\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n  }, [dispatch, isAuthenticated, error, history]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.set('name', name);\n    formData.set('email', email);\n    formData.set('address', address);\n    formData.set('country', country);\n    formData.set('city', city);\n    formData.set('phone', phone);\n    formData.set('password', password);\n    formData.set('avatar', avatar);\n    if (\n      name === '' ||\n      email === '' ||\n      address === '' ||\n      country === '' ||\n      city === '' ||\n      phone === '' ||\n      password === '' ||\n      avatar === ''\n    ) {\n      alert.show('please fill out all the fields');\n    } else {\n      dispatch(register(formData));\n    }\n  };\n\n  const onChange = (e) => {\n    if (e.target.name === 'avatar') {\n      const reader = new FileReader();\n\n      reader.onload = () => {\n        if (reader.readyState === 2) {\n          setAvatarPreview(reader.result);\n          setAvatar(reader.result);\n        }\n      };\n\n      reader.readAsDataURL(e.target.files[0]);\n    } else {\n      setUser({ ...user, [e.target.name]: e.target.value });\n    }\n  };\n\n  return (\n    <Fragment>\n      <MetaData title={'Register User'} />\n      <div className=\"container my-5\">\n        <form\n          className=\"shadow-lg p-4 border-radius-20\"\n          onSubmit={submitHandler}\n          encType=\"multipart/form-data\"\n        >\n          <h1 className=\"mb-3 text-center\">Register</h1>\n          <div className=\"row mt-5\">\n            <div className=\"col-lg-4\">\n              <div className=\"form-group\">\n                <div className=\"d-flex align-items-center\">\n                  <figure className=\"avatar\">\n                    <img\n                      src={avatarPreview}\n                      className=\"rounded-circle\"\n                      alt=\"Avatar Preview\"\n                    />\n                    <input\n                      type=\"file\"\n                      name=\"avatar\"\n                      className=\"hidden-file-input\"\n                      id=\"customFile\"\n                      accept=\"images/*\"\n                      onChange={onChange}\n                    />\n                  </figure>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-lg-7\">\n              <div className=\"form-group\">\n                <label htmlFor=\"email_field\">Name</label>\n                <input\n                  type=\"name\"\n                  id=\"name_field\"\n                  className=\"form-control\"\n                  name=\"name\"\n                  value={name}\n                  onChange={onChange}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"email_field\">Email</label>\n                <input\n                  type=\"email\"\n                  id=\"email_field\"\n                  className=\"form-control\"\n                  name=\"email\"\n                  value={email}\n                  onChange={onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"email_field\">Address</label>\n                <input\n                  type=\"txt\"\n                  id=\"address_field\"\n                  className=\"form-control\"\n                  name=\"address\"\n                  value={address}\n                  onChange={onChange}\n                />\n              </div>\n              {/* <div className=\"form-group\">\n                <label htmlFor=\"email_field\">Country</label>\n                <input\n                  type=\"txt\"\n                  id=\"country_field\"\n                  className=\"form-control\"\n                  name=\"country\"\n                  value={country}\n                  onChange={onChange}\n                />\n              </div> */}\n              <div className=\"form-group\">\n                <label htmlFor=\"country_field\">Country</label>\n                <select\n                  id=\"country_field\"\n                  className=\"form-control\"\n                  value={country}\n                  name=\"country\"\n                  onChange={onChange}\n                  required\n                >\n                  {countriesList.map((country) => (\n                    <option key={country.name} value={country.name}>\n                      {country.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"email_field\">City</label>\n                <input\n                  type=\"txt\"\n                  id=\"city_field\"\n                  className=\"form-control\"\n                  name=\"city\"\n                  value={city}\n                  onChange={onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"email_field\">Phone</label>\n                <input\n                  type=\"txt\"\n                  id=\"phone_field\"\n                  className=\"form-control\"\n                  name=\"phone\"\n                  value={phone}\n                  onChange={onChange}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"password_field\">Password</label>\n                <input\n                  type=\"password\"\n                  id=\"password_field\"\n                  className=\"form-control\"\n                  name=\"password\"\n                  value={password}\n                  onChange={onChange}\n                />\n              </div>\n\n              <div className=\"text-center mt-5 mb-4\">\n                <button\n                  id=\"register_button\"\n                  type=\"submit\"\n                  className=\"order-button px-5\"\n                  disabled={loading ? true : false}\n                >\n                  REGISTER\n                </button>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Register;\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\user\\Profile.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\user\\UpdateProfile.js",["666"],"import React, { Fragment, useState, useEffect } from 'react';\n\nimport MetaData from '../layout/MetaData';\n\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  updateProfile,\n  loadUser,\n  clearErrors,\n} from '../../actions/userActions';\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants';\n\nconst UpdateProfile = ({ history }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [avatar, setAvatar] = useState('');\n  const [avatarPreview, setAvatarPreview] = useState(\n    '/images/default_avatar.jpg'\n  );\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  const { user } = useSelector((state) => state.auth);\n  const { error, isUpdated, loading } = useSelector((state) => state.user);\n\n  useEffect(() => {\n    if (user) {\n      setName(user.name);\n      setEmail(user.email);\n      setAvatarPreview(user.avatar.url);\n    }\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (isUpdated) {\n      alert.success('User updated successfully');\n      dispatch(loadUser());\n\n      history.push('/me');\n\n      dispatch({\n        type: UPDATE_PROFILE_RESET,\n      });\n    }\n  }, [dispatch, alert, error, history, isUpdated]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.set('name', name);\n    formData.set('email', email);\n    formData.set('avatar', avatar);\n\n    dispatch(updateProfile(formData));\n  };\n\n  const onChange = (e) => {\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      if (reader.readyState === 2) {\n        setAvatarPreview(reader.result);\n        setAvatar(reader.result);\n      }\n    };\n\n    reader.readAsDataURL(e.target.files[0]);\n  };\n  return (\n    <Fragment>\n      <MetaData title={'Update Profile'} />\n\n      <div className='row wrapper'>\n        <div className='col-10 col-lg-5'>\n          <form\n            className='shadow-lg'\n            onSubmit={submitHandler}\n            encType='multipart/form-data'\n          >\n            <h1 className='mt-2 mb-5'>Update Profile</h1>\n\n            <div className='form-group'>\n              <label htmlFor='email_field'>Name</label>\n              <input\n                type='name'\n                id='name_field'\n                className='form-control'\n                name='name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </div>\n\n            <div className='form-group'>\n              <label htmlFor='email_field'>Email</label>\n              <input\n                type='email'\n                id='email_field'\n                className='form-control'\n                name='email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </div>\n\n            <div className='form-group'>\n              <label htmlFor='avatar_upload'>Avatar</label>\n              <div className='d-flex align-items-center'>\n                <div>\n                  <figure className='avatar mr-3 item-rtl'>\n                    <img\n                      src={avatarPreview}\n                      className='rounded-circle'\n                      alt='Avatar Preview'\n                    />\n                  </figure>\n                </div>\n                <div className='custom-file'>\n                  <input\n                    type='file'\n                    name='avatar'\n                    className='custom-file-input'\n                    id='customFile'\n                    accept='image/*'\n                    onChange={onChange}\n                  />\n                  <label className='custom-file-label' htmlFor='customFile'>\n                    Choose Avatar\n                  </label>\n                </div>\n              </div>\n            </div>\n\n            <button\n              type='submit'\n              className='btn update-btn btn-block mt-4 mb-3'\n              disabled={loading ? true : false}\n            >\n              Update\n            </button>\n          </form>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default UpdateProfile;\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\user\\UpdatePassword.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\cards\\BlogCardDetail.js",["667","668"],"import React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { getData, postData } from '../../../routes/FetchData';\nimport Loader from '../../layout/Loader';\nconst BlogCardDetail = (props) => {\n  // console.log(props);\n  const [name, setname] = useState('');\n  const [email, setemail] = useState('');\n  const [comment, setcomment] = useState('');\n  const [blogsData, setblogsData] = useState();\n  const [refresh, setrefresh] = useState(false);\n  useEffect(() => {\n    // setLoading(true);\n    getData(`/api/v1/blogs`)\n      .then((res) => {\n        // console.log(res.data.blog);\n        setblogsData((r) => (r = res.data.blog));\n        // setLoading(false);\n      })\n      .catch((err) => console.log(err.response.data.msg));\n  }, [refresh]);\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.set('name', name);\n    formData.set('email', email);\n    formData.set('comment', comment);\n    formData.set('blogId', props.match.params.id);\n    postData('/api/v1/blog/review', formData)\n      .then((res) => {\n        setname('');\n        setemail('');\n        setcomment('');\n        setrefresh(!refresh);\n      })\n      .catch((err) => console.log(err.response.data.msg));\n  };\n  return (\n    <>\n      {blogsData ? (\n        <>\n          {blogsData.map((data) => {\n            return (\n              <>\n                {data._id === props.match.params.id ? (\n                  <section className=\"blog-details-area ptb-50\">\n                    <div className=\"container\">\n                      <div className=\"row\">\n                        <div className=\"col-lg-12\">\n                          <div className=\"blog-details-desc\">\n                            <div className=\"article-image\">\n                              {/* <img src={} alt=\"image\" /> */}\n                            </div>\n\n                            <div className=\"article-content\">\n                              <div className=\"details-content\">\n                                <span className=\"blog-image\">\n                                  <img\n                                    src={data.image.url}\n                                    alt={data.heading}\n                                    className=\"img-thumbnail\"\n                                  />\n                                </span>\n                                <h3 className=\"text-uppercase\">\n                                  <a href=\"/blog-details\">{data.heading}</a>\n                                </h3>\n                                <div className=\"post-meta\">\n                                  <a href=\"#\">Admin</a>{' '}\n                                  {new Date(data.createdAt).toDateString()}\n                                  Comments\n                                </div>\n                                <p>{data.description}</p>\n                              </div>\n                            </div>\n\n                            <div className=\"comments-area\">\n                              <h3 className=\"comments-title\">\n                                Comments ({data.numOfReviews})\n                              </h3>\n\n                              <ol className=\"comment-list\">\n                                <li className=\"comment\">\n                                  {data.reviews.map((val) => {\n                                    return (\n                                      <div className=\"comment-body bg-darken-1\">\n                                        <footer className=\"comment-meta\">\n                                          <div className=\"comment-author vcard\">\n                                            <img\n                                              src=\"https://www.w3schools.com/w3images/avatar2.png\"\n                                              alt=\"Avatar\"\n                                              class=\"avatar\"\n                                              width=\"50\"\n                                              className=\"rounded-circle mr-2\"\n                                            />\n                                            <b className=\"fn\">{val.name}</b>\n                                          </div>\n                                          <p className=\"fn\">\n                                            <b>Email : </b>\n                                            {val.email}\n                                          </p>\n                                          <div className=\"comment-metadata\">\n                                            <a href=\"#\">\n                                              <span>\n                                                <b>Date : </b>\n                                                {new Date(\n                                                  val.createdAt\n                                                ).toDateString()}\n                                              </span>\n                                            </a>\n                                          </div>\n                                        </footer>\n                                        <div className=\"comment-content\">\n                                          <p>\n                                            <b>Comment :</b> {val.comment}\n                                          </p>\n                                        </div>\n                                        <div className=\"reply\"></div>\n                                      </div>\n                                    );\n                                  })}\n                                </li>\n                              </ol>\n\n                              <div className=\"comment-respond\">\n                                <h3 className=\"comment-reply-title\">\n                                  Leave A Reply\n                                </h3>\n\n                                <form\n                                  className=\"comment-form\"\n                                  onSubmit={submitHandler}\n                                >\n                                  <p className=\"comment-notes\">\n                                    <span id=\"email-notes\">\n                                      Your email address will not be published.\n                                    </span>\n                                    Required fields are marked\n                                    <span className=\"required\">*</span>\n                                  </p>\n                                  <p className=\"comment-form-author\">\n                                    <label>Name</label>\n                                    <input\n                                      type=\"text\"\n                                      id=\"author\"\n                                      name=\"author\"\n                                      value={name}\n                                      onChange={(e) => setname(e.target.value)}\n                                      required=\"required\"\n                                    />\n                                  </p>\n                                  <p className=\"comment-form-email\">\n                                    <label>Email</label>\n                                    <input\n                                      type=\"email\"\n                                      id=\"email\"\n                                      name=\"email\"\n                                      value={email}\n                                      onChange={(e) => setemail(e.target.value)}\n                                      required=\"required\"\n                                    />\n                                  </p>\n\n                                  <p className=\"comment-form-comment\">\n                                    <label>Comment</label>\n                                    <textarea\n                                      name=\"comment\"\n                                      id=\"comment\"\n                                      cols=\"45\"\n                                      rows=\"5\"\n                                      maxlength=\"65525\"\n                                      required=\"required\"\n                                      value={comment}\n                                      onChange={(e) =>\n                                        setcomment(e.target.value)\n                                      }\n                                    ></textarea>\n                                  </p>\n\n                                  <p className=\"form-submit\">\n                                    <input\n                                      type=\"submit\"\n                                      name=\"submit\"\n                                      id=\"submit\"\n                                      className=\"submit\"\n                                      value=\"Post A Comment\"\n                                    />\n                                  </p>\n                                </form>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </section>\n                ) : null}\n              </>\n            );\n          })}\n        </>\n      ) : (\n        <>\n          <Loader />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default withRouter(BlogCardDetail);\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\reducers\\productReducers.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\reducers\\userReducers.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\reducers\\cartReducers.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\reducers\\orderReducers.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\actions\\productActions.js",["669"],"import axios from 'axios';\n\nimport {\n    ALL_PRODUCTS_REQUEST,\n    ALL_PRODUCTS_SUCCESS,\n    ALL_PRODUCTS_FAIL,\n    ADMIN_PRODUCTS_REQUEST,\n    ADMIN_PRODUCTS_SUCCESS,\n    ADMIN_PRODUCTS_FAIL,\n    NEW_PRODUCT_REQUEST,\n    NEW_PRODUCT_SUCCESS,\n    NEW_PRODUCT_FAIL,\n    DELETE_PRODUCT_REQUEST,\n    DELETE_PRODUCT_SUCCESS,\n    DELETE_PRODUCT_FAIL,\n    UPDATE_PRODUCT_REQUEST,\n    UPDATE_PRODUCT_SUCCESS,\n    UPDATE_PRODUCT_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    NEW_REVIEW_REQUEST,\n    NEW_REVIEW_SUCCESS,\n    NEW_REVIEW_FAIL,\n    GET_REVIEWS_REQUEST,\n    GET_REVIEWS_SUCCESS,\n    GET_REVIEWS_FAIL,\n    DELETE_REVIEW_REQUEST,\n    DELETE_REVIEW_SUCCESS,\n    DELETE_REVIEW_RESET,\n    DELETE_REVIEW_FAIL,\n    CLEAR_ERRORS\n\n} from '../constants/productConstants'\n\nexport const getProducts = (keyword = '', currentPage = 1, price, category, rating = 0) => async (dispatch) => {\n    try {\n\n        dispatch({ type: ALL_PRODUCTS_REQUEST })\n\n        let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`\n\n        if (category) {\n            link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}&ratings[gte]=${rating}`\n        }\n\n        const { data } = await axios.get(link)\n\n        dispatch({\n            type: ALL_PRODUCTS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ALL_PRODUCTS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const newProduct = (productData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_PRODUCT_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(`/api/v1/admin/product/new`, productData, config)\n\n        dispatch({\n            type: NEW_PRODUCT_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Delete product (Admin)\nexport const deleteProduct = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_PRODUCT_REQUEST })\n\n        const { data } = await axios.delete(`/api/v1/admin/product/${id}`)\n\n        dispatch({\n            type: DELETE_PRODUCT_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Update Product (ADMIN)\nexport const updateProduct = (id, productData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_PRODUCT_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/admin/product/${id}`, productData, config)\n\n        dispatch({\n            type: UPDATE_PRODUCT_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const getProductDetails = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/product/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data.product\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const newReview = (reviewData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_REVIEW_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/review`, reviewData, config)\n\n        dispatch({\n            type: NEW_REVIEW_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_REVIEW_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\nexport const getAdminProducts = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: ADMIN_PRODUCTS_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/admin/products`)\n\n        dispatch({\n            type: ADMIN_PRODUCTS_SUCCESS,\n            payload: data.products\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: ADMIN_PRODUCTS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Get product reviews\nexport const getProductReviews = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: GET_REVIEWS_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/reviews?id=${id}`)\n\n        dispatch({\n            type: GET_REVIEWS_SUCCESS,\n            payload: data.reviews\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: GET_REVIEWS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Delete product review\nexport const deleteReview = (id, productId) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_REVIEW_REQUEST })\n\n        const { data } = await axios.delete(`/api/v1/reviews?id=${id}&productId=${productId}`)\n\n        dispatch({\n            type: DELETE_REVIEW_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n\n        console.log(error.response);\n\n        dispatch({\n            type: DELETE_REVIEW_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Clear Errors\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n}","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\product\\Product.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\layout\\MetaData.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\layout\\Loader.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\layout\\MySlider.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\admin\\Sidebar.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\Sections\\CallToAction.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\Sections\\AboutUs.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\Sections\\WhychooseUS.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\actions\\cartActions.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\cards\\SubscriptionCard.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\cards\\FaqCard.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\pages\\cards\\BlogCard.js",["670","671"],"import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst BlogCard = (props) => {\n  {\n    /* <div className=\"cardHeading\">\n      <h2>Heading : {props.heading}</h2>\n      <p>Discription : {props.description}</p>\n      <span>Image</span>\n      <img src={props.image} alt=\"image\"></img>\n    </div> */\n  }\n  return (\n    <div className=\"col-lg-4 col-md-6\">\n      <div className=\"single-blog\">\n        <div className=\"blog-image\">\n          <Link to={'/blog-details/' + props._id}>\n            <img src={props.image} alt=\"image\" />\n          </Link>\n        </div>\n        <div className=\"blog-content\">\n          <h3 className=\"text-uppercase\">\n            <Link to={'/blog-details/' + props._id}>{props.heading}</Link>\n          </h3>\n          <div className=\"post-meta\">\n            {new Date(props.createdAt).toDateString()}\n          </div>\n          <p>\n            {props.description.substring(0, 100)}\n            {props.description.length > 100 && '...'}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BlogCard;\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\actions\\orderActions.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\constants\\cartConstants.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\constants\\userConstants.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\constants\\orderConstants.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\constants\\productConstants.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\routes\\FetchData.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\review\\ListReviews.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\layout\\Navbar.js",["672"],"import React, { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst Navbar = () => {\n  const [visible, setVisible] = useState(false);\n  const [active, setActive] = useState(false);\n  const [showMenu, setShowMenu] = useState(false);\n  const location = useLocation();\n\n  const toggleHotline = () => {\n    setActive(!active);\n  };\n\n  const toggleMenu = () => {\n    setShowMenu(!showMenu);\n  };\n\n  const handleScroll = () => {\n    const currentScrollPos = window.pageYOffset;\n\n    if (currentScrollPos > 90) {\n      setVisible(true);\n    } else {\n      setVisible(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, [visible, handleScroll, location]);\n\n  return (\n    <div\n      className={`navbar-area mb-2 ${\n        visible ? 'is-sticky sticky-active container-fluid' : 'container'\n      }`}\n    >\n      <div className={`main-navbar container ${showMenu && 'show'}`}>\n        <div className=\"container\">\n          <nav className=\"navbar navbar-expand-md navbar-light\">\n            <div className=\"collapse navbar-collapse mean-menu\">\n              <ul className=\"navbar-nav responsive-menu\">\n                <li\n                  className={\n                    location.pathname === '/' ? 'nav-item active' : 'nav-item'\n                  }\n                >\n                  <Link to=\"/\" className=\"nav-link\">\n                    HOME\n                  </Link>\n                </li>\n\n                <li\n                  className={\n                    location.pathname === '/services'\n                      ? 'nav-item active'\n                      : 'nav-item'\n                  }\n                >\n                  <Link to=\"/services\" className=\"nav-link\">\n                    SERVICES\n                  </Link>\n                </li>\n\n                <li\n                  className={\n                    location.pathname === '/discusion'\n                      ? 'nav-item active'\n                      : 'nav-item'\n                  }\n                >\n                  <Link to=\"/discusion\" className=\"nav-link\">\n                    DISCUSSION FORUM\n                  </Link>\n                </li>\n\n                <li\n                  className={\n                    location.pathname === '/faq'\n                      ? 'nav-item active'\n                      : 'nav-item'\n                  }\n                >\n                  <Link to=\"/faq\" className=\"nav-link\">\n                    FAQ\n                  </Link>\n                </li>\n\n                <li\n                  className={\n                    location.pathname === '/blogs'\n                      ? 'nav-item active'\n                      : 'nav-item'\n                  }\n                >\n                  <Link to=\"/blogs\" className=\"nav-link\">\n                    BLOGS\n                  </Link>\n                </li>\n\n                <li\n                  className={\n                    location.pathname === '/contactus'\n                      ? 'nav-item active'\n                      : 'nav-item'\n                  }\n                >\n                  <Link to=\"/contactus\" className=\"nav-link\">\n                    CONTACT US\n                  </Link>\n                </li>\n              </ul>\n\n              <div className=\"others-option d-flex align-items-center\">\n                <div className=\"option-item respo-nav\">\n                  <span>\n                    Hotline:\n                    <a href=\"tel:16545676789\">(+1) 654 567 – 6789</a>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </nav>\n        </div>\n      </div>\n\n      <div className=\"others-option-for-responsive\">\n        <div className=\"container\">\n          <div className=\"responsive-logo\">\n            <span>Econix</span>\n          </div>\n          <div className=\"dot-menu\" onClick={() => toggleHotline()}>\n            <div className=\"inner\">\n              <div className=\"circle circle-one\"></div>\n              <div className=\"circle circle-two\"></div>\n              <div className=\"circle circle-three\"></div>\n            </div>\n          </div>\n\n          <div className=\"hamburger-menu\" onClick={() => toggleMenu()}>\n            {showMenu ? (\n              <span className=\"x-icon\">x</span>\n            ) : (\n              <i className=\"bx bx-menu\"></i>\n            )}\n          </div>\n\n          <div className={active ? 'active container' : 'container'}>\n            <div className=\"option-inner\">\n              <div className=\"others-option d-flex align-items-center\">\n                <div className=\"option-item\">\n                  <span>\n                    Hotline:\n                    <a href=\"tel:16545676789\">(+1) 654 567 – 6789</a>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\Chatt\\ChattComponent.js",["673","674","675"],"import Avatar from '@material-ui/core/Avatar';\nimport moment from 'moment';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport ScrollIntoView from 'react-scroll-into-view';\nimport io from 'socket.io-client';\nimport { getData } from '../../routes/FetchData';\nimport '../css/chatt/chatt.css';\nimport Footer from './footer/Footer';\n\nconst ChattComponent = (props) => {\n  const { user } = useSelector((state) => state.auth);\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    const socket = io();\n    setSocket(socket);\n    return () => socket.close();\n  }, []);\n\n  const [comments, setComments] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [replyId, setreplyId] = useState('');\n  const [replyName, setreplyName] = useState('');\n  const [replyComment, setreplyComment] = useState('');\n  const [page, setPage] = useState(1);\n  const pageEnd = useRef();\n  const currentDate = new Date();\n\n  useEffect(() => {\n    setLoading(true);\n    getData(`/api/v1/comments/?limit=${page * 5}`)\n      .then((res) => {\n        // console.log(`data is ${res}`);\n        // console.log(res.data.comments);\n        setComments((r) => (r = res.data.comments));\n        setLoading(false);\n      })\n      .catch((err) => console.log(err.response.data.msg));\n  }, [page]);\n  const replyController = (val1, val2, val3) => {\n    if (replyComment === val2) {\n      setreplyName('');\n      setreplyComment('');\n      setreplyId('');\n    } else {\n      setreplyName(val1);\n      setreplyComment(val2);\n      setreplyId(val3);\n    }\n  };\n  // Realtime\n  // Join room\n  // useEffect(() => {\n  //   if (socket) {\n  //     socket.emit('joinRoom', id);\n  //   }\n  // }, [socket, id]);\n\n  useEffect(() => {\n    if (socket) {\n      socket.on('sendCommentToClient', (msg) => {\n        setComments([msg, ...comments]);\n      });\n\n      return () => socket.off('sendCommentToClient');\n    }\n  }, [socket, comments]);\n\n  // infiniti scroll\n\n  // Reply Comments\n  useEffect(() => {\n    if (socket) {\n      socket.on('sendReplyCommentToClient', (msg) => {\n        setComments([msg, ...comments]);\n      });\n      setreplyId('');\n      setreplyName('');\n      setreplyComment('');\n      return () => socket.off('sendReplyCommentToClient');\n    }\n  }, [socket, comments]);\n  const AlwaysScrollToBottom = () => {\n    const elementRef = useRef();\n    useEffect(() => {\n      elementRef.current.scrollIntoView();\n      window.scrollTo({\n        top: 90,\n        left: 0,\n        behavior: 'smooth',\n      });\n    });\n\n    return <div ref={elementRef} />;\n  };\n\n  return (\n    <div className=\"chat\">\n      {user ? (\n        <>\n          <div id=\"chattok\" className=\"chatt-header\">\n            <Avatar\n              src={user.avatar && user.avatar.url}\n              alt={user && user.name}\n            />\n            <div className=\"chatt-header-Info\">\n              <h3>{user && user.name}</h3>\n              <p>(Live discussion)</p>\n            </div>\n\n            {/* <div className=\"chatt-header-right\">\n              <IconButton>\n                <MoreVertIcon />\n              </IconButton>\n            </div> */}\n          </div>\n          {comments ? (\n            <>\n              <div className=\"chat-body\">\n                {comments\n                  .map((comment) => (\n                    <>\n                      {comment.userId === user._id ? (\n                        <p\n                          className=\"chat-message chat-reciver\"\n                          id={'comment' + comment._id}\n                        >\n                          {comment.replyName ? (\n                            // eslint-disable-next-line jsx-a11y/anchor-is-valid\n                            <ScrollIntoView\n                              selector={'#comment' + comment.replyId}\n                              scrollOptions={{ block: 'center' }}\n                              className=\"cursor-pointer\"\n                            >\n                              <div className=\"d-flex mainReply\">\n                                <p className=\"mr-2 \">{comment.replyName}</p>\n                                <p>{comment.replyContent}</p>\n                              </div>\n                            </ScrollIntoView>\n                          ) : null}\n\n                          <div className=\"reply-btn\">\n                            <span\n                              className=\"dropDown ml-auto\"\n                              onClick={() =>\n                                replyController(\n                                  comment.username,\n                                  comment.content,\n                                  comment._id\n                                )\n                              }\n                            >\n                              Reply{' '}\n                              <i\n                                className=\"fa fa-angle-down\"\n                                aria-hidden=\"true\"\n                              ></i>\n                            </span>\n                          </div>\n\n                          <div className=\"navbar p-0\">\n                            <div className=\"mr-auto\">{comment.content}</div>\n                            <div className=\"px-2\"></div>\n                            <div className=\"chat-time ml-auto mt-auto\">\n                              {moment(comment.createdAt).fromNow() + ' '}\n                              {currentDate.getDate() ===\n                                new Date(comment.createdAt).getDate() &&\n                              currentDate.getMonth() ===\n                                new Date(comment.createdAt).getMonth() &&\n                              currentDate.getFullYear() ===\n                                new Date(comment.createdAt).getFullYear()\n                                ? new Date(\n                                    comment.createdAt\n                                  ).toLocaleTimeString('en-US')\n                                : new Date(comment.createdAt).toLocaleString()}\n                            </div>\n                          </div>\n                        </p>\n                      ) : (\n                        <div className=\"d-flex my-2\">\n                          <span className=\"my-auto\">\n                            <img\n                              className=\"mr-1\"\n                              style={{\n                                maxHeight: '30px',\n                                borderRadius: '50%',\n                                border: '1px solid #F8921C',\n                              }}\n                              src={comment.avatar}\n                              alt={comment.name}\n                            />\n                          </span>\n                          <p\n                            className=\"chat-message\"\n                            id={'comment' + comment._id}\n                          >\n                            <div className=\"text-danger mr-2\">\n                              {comment.username}\n                            </div>\n\n                            {comment.replyName ? (\n                              // eslint-disable-next-line jsx-a11y/anchor-is-valid\n                              <ScrollIntoView\n                                selector={'#comment' + comment.replyId}\n                                scrollOptions={{ block: 'center' }}\n                                className=\"cursor-pointer\"\n                              >\n                                <div className=\"d-flex mainReply\">\n                                  <p className=\"mr-2 \">{comment.replyName}</p>\n                                  <p>{comment.replyContent}</p>\n                                </div>\n                              </ScrollIntoView>\n                            ) : null}\n\n                            <div className=\"reply-btn\">\n                              <span\n                                className=\"dropDown ml-auto\"\n                                onClick={() =>\n                                  replyController(\n                                    comment.username,\n                                    comment.content,\n                                    comment._id\n                                  )\n                                }\n                              >\n                                Reply{' '}\n                                <i\n                                  className=\"fa fa-angle-down\"\n                                  aria-hidden=\"true\"\n                                ></i>\n                              </span>\n                            </div>\n\n                            <div className=\"navbar p-0\">\n                              <div className=\"mr-auto\">{comment.content}</div>\n                              <div className=\"px-2\"></div>\n                              <div className=\"chat-time ml-auto mt-auto\">\n                                {moment(comment.createdAt).fromNow() + ' '}\n                                {currentDate.getDate() ===\n                                  new Date(comment.createdAt).getDate() &&\n                                currentDate.getMonth() ===\n                                  new Date(comment.createdAt).getMonth() &&\n                                currentDate.getFullYear() ===\n                                  new Date(comment.createdAt).getFullYear()\n                                  ? new Date(\n                                      comment.createdAt\n                                    ).toLocaleTimeString('en-US')\n                                  : new Date(\n                                      comment.createdAt\n                                    ).toLocaleString()}\n                              </div>\n                            </div>\n                          </p>\n                        </div>\n                      )}\n                      <AlwaysScrollToBottom />\n                    </>\n                  ))\n                  .reverse()}\n              </div>\n            </>\n          ) : null}\n          {replyName !== '' ? (\n            <div className=\"d-flex myReply px-4\">\n              <p className=\"mr-2 text-success\">{replyName}</p>\n              <p>{replyComment}</p>\n            </div>\n          ) : null}\n\n          <Footer\n            user={user}\n            socket={socket}\n            replyId={replyId}\n            replyName={replyName}\n            replyComment={replyComment}\n          />\n        </>\n      ) : (\n        <div className=\"container my-5 text-center\">\n          <div className=\"messageLogin\">\n            <h3>Please Login first</h3>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChattComponent;\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\layout\\TopHeader.js",["676"],"import StyledBadge from '@material-ui/core/Badge';\nimport IconButton from '@material-ui/core/IconButton';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport React, { useEffect, useState } from 'react';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport { logout } from '../../actions/userActions';\nimport { patchData, postData } from '../../routes/FetchData';\nimport NotificationBox from './NotificationBox';\nimport logo from '../../assets/img/logo.webp';\n\nconst TopHeader = () => {\n  const [dialog, setDialog] = useState(false);\n  const [valid, setValid] = useState(false);\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const [heading, setHeading] = useState('');\n  const [content, setContent] = useState('');\n  const [id, setId] = useState('');\n  const [userdata, setUserdata] = useState(null);\n  const { user, loading } = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    postData('/api/v1/user/notification', heading)\n      .then((res) => {\n        setUserdata(res.data.user);\n      })\n      .catch((err) => console.log(err));\n  }, [valid]);\n\n  const logoutHandler = () => {\n    dispatch(logout());\n    alert.success('Logged out successfully.');\n    window.location.reload(true);\n  };\n\n  const setNotification = (val1, val2, val3) => {\n    setHeading(val1);\n    setContent(val2);\n    if (val3 !== id) setId(val3);\n    setDialog(true);\n  };\n\n  // console.log(userdata);\n  const ShowNotification = () => {\n    // console.log(id);\n\n    patchData(`/api/v1/notification/status/${id}`)\n      .then((res) => setValid(!valid))\n      .catch((err) => console.log(err));\n    setDialog(false);\n  };\n  \n  return (\n    <div className=\"top-header-area\" id=\"top-header-area\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-3 col-sm-6 d-flex\">\n            <div className=\"top-header-content my-auto d-none d-md-block\">\n              <span>\n                <i className=\"flaticon-check\"></i>\n                Free shipping on all orders over $50\n              </span>\n            </div>\n            <div className=\"middle-header-logo d-block d-md-none\">\n              <Link to=\"/\">\n                <img src={logo} alt=\"Global Aircond\" className=\"img-fluid\" style={{maxHeight: \"45px\", backgroundColor: \"white\", padding: \"4px\", borderRadius: \"5px\"}} />\n              </Link>\n            </div>\n          </div>\n\n          <div className=\"col-9 col-sm-6 text-right\">\n            <ul className=\"top-header-optional\">\n              <li>\n                {user ? (\n                  <div className=\"d-flex\">\n                    <div className=\"dropdown\">\n                      <Link\n                        to=\"#\"\n                        className=\"btn dropdown-toggle text-white media\"\n                        type=\"button\"\n                        id=\"dropDownMenuButton\"\n                        data-toggle=\"dropdown\"\n                        aria-haspopup=\"true\"\n                        aria-expanded=\"false\"\n                        style={{ paddingRight: '2rem' }}\n                      >\n                        <img\n                          className=\"mr-3\"\n                          style={{\n                            maxHeight: '30px',\n                            borderRadius: '50%',\n                            border: '1px solid #F8921C',\n                          }}\n                          src={user.avatar && user.avatar.url}\n                          alt={user && user.name}\n                        />\n                        <div className=\"media-body my-auto\">\n                          <h5 className=\"mt-0 text-light\">\n                            {user && user.name}\n                          </h5>\n                        </div>\n                      </Link>\n\n                      <div\n                        className=\"dropdown-menu text-dark\"\n                        aria-labelledby=\"dropDownMenuButton\"\n                      >\n                        {user && user.role === 'admin' && (\n                          <Link className=\"dropdown-item\" to=\"/dashboard\">\n                            Dashboard\n                          </Link>\n                        )}\n                        <Link className=\"dropdown-item\" to=\"/orders/me\">\n                          Orders\n                        </Link>\n                        <Link className=\"dropdown-item\" to=\"/profile\">\n                          Profile\n                        </Link>\n                        <Link\n                          className=\"dropdown-item text-danger\"\n                          to=\"/\"\n                          onClick={logoutHandler}\n                        >\n                          Logout\n                        </Link>\n                      </div>\n                    </div>\n                    {userdata && userdata.notifications && (\n                      <div className=\"ml-2 dropdown\">\n                        <Link\n                          style={{ textDecoration: 'none' }}\n                          className=\"btn dropdown-toggle text-white media\"\n                          type=\"button\"\n                          id=\"dropDownMenuButton2\"\n                          data-toggle=\"dropdown\"\n                          aria-haspopup=\"true\"\n                          aria-expanded=\"false\"\n                        >\n                          <Link>\n                            <IconButton\n                              aria-label=\"cart\"\n                              className=\"cartItem\"\n                              style={{ color: '#ffff', padding: '0px 20px' }}\n                            >\n                              <StyledBadge\n                                badgeContent={userdata.notifications.reduce((sum, val) => {return sum + ((val.status==='unread' ? 1 : 0))}, 0)}\n                                color=\"secondary\"\n                              >\n                                <NotificationsIcon />\n                              </StyledBadge>\n                            </IconButton>\n                          </Link>\n                        </Link>\n\n                        <div\n                          className=\"dropdown-menu notification-bar text-dark\"\n                          aria-labelledby=\"dropDownMenuButton2\"\n                        >\n                          {userdata.notifications.map((val) => (\n                            <>\n                              {val.status === 'read' ? (\n                                <Link\n                                  className=\"dropdown-item read\"\n                                  onClick={() =>\n                                    setNotification(\n                                      val.heading,\n                                      val.content,\n                                      id\n                                    )\n                                  }\n                                >\n                                  {val.heading}\n                                </Link>\n                              ) : (\n                                <Link\n                                  className=\"dropdown-item unread\"\n                                  onClick={() =>\n                                    setNotification(\n                                      val.heading,\n                                      val.content,\n                                      val._id\n                                    )\n                                  }\n                                >\n                                  {val.heading} <span> ◉ </span>\n                                </Link>\n                              )}\n                            </>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                ) : (\n                  !loading && (\n                    <div style={{ minWidth: '125px' }}>\n                      <Link to=\"/login\" className=\"text-light\">\n                        <i className=\"fa fa-lock\"></i>\n                        Login\n                      </Link>\n                      {'  |  '}\n                      <Link to=\"/register\" className=\"text-light\">\n                        Register\n                      </Link>\n                    </div>\n                  )\n                )}\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      {dialog === true ? (\n        <NotificationBox\n          box={ShowNotification}\n          heading={heading}\n          content={content}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default withRouter(TopHeader);\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\layout\\MiddleHeader.js",["677"],"import StyledBadge from '@material-ui/core/Badge';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport { useSelector } from 'react-redux';\nimport { Link, Route, withRouter } from 'react-router-dom';\nimport logo from '../../assets/img/Logo.gif';\nimport Search from './Search';\n\nconst MiddleHeader = () => {\n  const { cartItems } = useSelector((state) => state.cart);\n\n  return (\n    <div className=\"middle-header-area\">\n      <div className=\"container\">\n        <div className=\"row align-items-center\">\n          <div className=\"col-sm-3 d-none d-md-block\">\n            <div className=\"middle-header-logo\">\n              <Link to=\"/\">\n                <img\n                  src={logo}\n                  className=\"img-fluid\"\n                  style={{ maxHeight: '50px' }}\n                />\n              </Link>\n            </div>\n          </div>\n\n          <div className=\"col-9 col-md-6\">\n            <div className=\"middle-header-search\">\n              <Route render={({ history }) => <Search history={history} />} />\n            </div>\n          </div>\n\n          <div className=\"col-3\">\n            <ul className=\"middle-header-optional\">\n              <Link\n                to=\"/cart\"\n                style={{ textDecoration: 'none', width: '45px' }}\n              >\n                <Link to=\"/cart\">\n                  <IconButton\n                    aria-label=\"cart\"\n                    className=\"cartItem\"\n                    style={{ color: '#17204A' }}\n                  >\n                    <StyledBadge\n                      badgeContent={cartItems.length}\n                      color=\"secondary\"\n                    >\n                      <ShoppingCartIcon />\n                    </StyledBadge>\n                  </IconButton>\n                </Link>\n              </Link>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(MiddleHeader);\n","D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\cart\\CheckoutSteps.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\layout\\NotificationBox.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\layout\\Search.js",[],"D:\\Study\\University Study\\FYP\\Crikhub\\Crikhub\\frontend\\src\\components\\Chatt\\footer\\Footer.jsx",["678","679","680"],"import SendIcon from '@material-ui/icons/Send';\nimport React, { useState } from 'react';\nimport '../../css/chatt/footer.css';\n\nconst Footer = (props) => {\n  const [cancel, setCancel] = useState(false);\n  const [text, setText] = useState('');\n\n  const onEmojiClick = (event, emojiObject) => {\n    if (emojiObject.emoji !== undefined) setText(text + emojiObject.emoji);\n  };\n  const submitHandler = (e) => {\n    e.preventDefault();\n    // alert(props.replyId);\n    const avatar = props.user.avatar.url;\n    const username = props.user.name;\n    const createdAt = new Date().toISOString();\n    const content = text;\n    const replyId = props.replyId;\n    const replyName = props.replyName;\n    const replyContent = props.replyComment;\n    const userId = props.user._id;\n    const socket = props.socket;\n    let send = null;\n\n    if (props.replyName !== '') {\n      send = 'replyComment';\n    }\n    socket.emit('createComment', {\n      username,\n      avatar,\n      content,\n      replyId,\n      replyName,\n      replyContent,\n      userId,\n      send,\n      createdAt,\n    });\n    setText('');\n  };\n  return (\n    <div className=\"chat-footer\">\n      <form onSubmit={submitHandler}>\n        <input\n          type=\"text\"\n          placeholder=\"Type a message\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        ></input>\n\n        <button type=\"submit\" className=\"text-danger\"></button>\n      </form>\n      <SendIcon onClick={submitHandler} />\n    </div>\n  );\n};\n\nexport default Footer;\n","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\index.js",[],["681","682"],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\App.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\store.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\Home.js",["683","684"],"import Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { useAlert } from 'react-alert';\nimport Pagination from 'react-js-pagination';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getProducts } from '../actions/productActions';\nimport Loader from './layout/Loader';\nimport MetaData from './layout/MetaData';\nimport Product from './product/Product';\nimport AboutUs from './Sections/AboutUs';\nimport WhychooseUS from './Sections/WhychooseUS';\n\nconst { createSliderWithTooltip } = Slider;\nconst Range = createSliderWithTooltip(Slider.Range);\n\nconst Home = ({ match }) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [price, setPrice] = useState([1, 1000]);\n  const [range, setRange] = useState(1, 1000);\n  const [category, setCategory] = useState('');\n  const [rating, setRating] = useState(0);\n  const [status, setstatus] = useState('published');\n  const categories = ['Mobiles', 'Laptops', 'Smartwaches'];\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  const {\n    loading,\n    products,\n    error,\n    productsCount,\n    resPerPage,\n    filteredProductsCount,\n  } = useSelector((state) => state.products);\n\n  const keyword = match.params.keyword;\n\n  useEffect(() => {\n    if (error) {\n      return alert.error(error);\n    }\n    // console.log(price);\n    dispatch(\n      getProducts(keyword, currentPage, price, category, rating, status)\n    );\n  }, [\n    dispatch,\n    alert,\n    error,\n    keyword,\n    currentPage,\n    range,\n    category,\n    rating,\n    status,\n  ]);\n\n  function setCurrentPageNo(pageNumber) {\n    setCurrentPage(pageNumber);\n  }\n\n  let count = filteredProductsCount;\n  if (keyword) {\n    count = filteredProductsCount;\n  }\n  function filterHandler() {\n    setRange(price);\n  }\n  return (\n    <div>\n      <Fragment>\n        {loading ? (\n          <Loader />\n        ) : (\n          <Fragment>\n            <MetaData title={'Home'} />\n\n            <section id=\"products\" className=\"container my-5\">\n              <h1 id=\"products_heading\" className=\"text-center mb-4\">\n                Latest Products\n              </h1>\n\n              <div className=\"row\">\n                {keyword ? (\n                  <Fragment>\n                    <div className=\"col-6 col-md-3 px-3\">\n                      <div>\n                        <div className=\"pr-5\">\n                          <Range\n                            marks={{\n                              1: `$1`,\n                              1000: `$1000`,\n                            }}\n                            min={1}\n                            max={1000}\n                            defaultValue={[1, 1000]}\n                            tipFormatter={(value) => `$${value}`}\n                            tipProps={{\n                              placement: 'top',\n                              visible: true,\n                            }}\n                            value={price}\n                            onChange={(price) => setPrice(price)}\n                          />\n                        </div>\n                        <button\n                          className=\"Filter order-button px-5 mt-5\"\n                          onClick={filterHandler}\n                        >\n                          Filter\n                        </button>\n\n                        <hr className=\"my-5\" />\n\n                        <div className=\"my-5\">\n                          <h4 className=\"mb-3\">Brand</h4>\n\n                          <ul className=\"pl-0\">\n                            {categories &&\n                              categories.map((category) => (\n                                <li\n                                  style={{\n                                    cursor: 'pointer',\n                                    listStyleType: 'none',\n                                  }}\n                                  key={category}\n                                  onClick={() => setCategory(category)}\n                                >\n                                  {category}\n                                </li>\n                              ))}\n                          </ul>\n                        </div>\n\n                        <hr className=\"my-3\" />\n                        <div className=\"mt-5\">\n                          <h4 className=\"mb-3\">Ratings</h4>\n\n                          <ul className=\"pl-0\">\n                            {[5, 4, 3, 2, 1].map((star) => (\n                              <li\n                                style={{\n                                  cursor: 'pointer',\n                                  listStyleType: 'none',\n                                }}\n                                key={star}\n                                onClick={() => setRating(star)}\n                              >\n                                <div className=\"rating-outer\">\n                                  <div\n                                    className=\"rating-inner\"\n                                    style={{\n                                      width: `${star * 20}%`,\n                                    }}\n                                  ></div>\n                                </div>\n                              </li>\n                            ))}\n                          </ul>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"col-6 col-md-9\">\n                      <div className=\"row\">\n                        {products.map((product) => (\n                          <Product\n                            key={product._id}\n                            product={product}\n                            col={4}\n                          />\n                        ))}\n                      </div>\n                    </div>\n                  </Fragment>\n                ) : (\n                  products.map((product) => (\n                    <Product key={product._id} product={product} />\n                  ))\n                )}\n              </div>\n            </section>\n\n            {resPerPage <= count && (\n              <div className=\"d-flex justify-content-center mt-5\">\n                <Pagination\n                  activePage={currentPage}\n                  itemsCountPerPage={resPerPage}\n                  totalItemsCount={productsCount}\n                  onChange={setCurrentPageNo}\n                  nextPageText={'Next'}\n                  prevPageText={'Prev'}\n                  firstPageText={'First'}\n                  lastPageText={'Last'}\n                  itemClass=\"page-item\"\n                  linkClass=\"page-link\"\n                />\n              </div>\n            )}\n          </Fragment>\n        )}\n      </Fragment>\n      <Fragment>\n        <div className=\"container-fluid my-3 bg-white p-5\">\n          <WhychooseUS />\n        </div>\n\n        <div className=\"container-fluid my-3  p-5\">\n          <AboutUs />\n        </div>\n      </Fragment>\n    </div>\n  );\n};\n\nexport default Home;\n","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\actions\\userActions.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\admin\\OrdersList.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\admin\\NewProduct.js",["685","686"],"import React, { Fragment, useEffect, useState } from 'react';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { clearErrors, newProduct } from '../../actions/productActions';\nimport { NEW_PRODUCT_RESET } from '../../constants/productConstants';\nimport MetaData from '../layout/MetaData';\nimport Sidebar from './Sidebar';\n\nconst NewProduct = ({ history }) => {\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState('');\n  const [stock, setStock] = useState(0);\n  const [seller, setSeller] = useState('');\n  const [images, setImages] = useState([]);\n  const [imagesPreview, setImagesPreview] = useState([]);\n  const [status, setStatus] = useState('upcoming');\n\n  const categories = ['Mobiles', 'Laptops', 'Smartwaches'];\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  const { loading, error, success } = useSelector((state) => state.newProduct);\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (success) {\n      history.push('/admin/products');\n      alert.success('Product created successfully');\n      dispatch({ type: NEW_PRODUCT_RESET });\n    }\n  }, [dispatch, alert, error, success, history]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (name === '' || price === '' || description === '' || seller === '')\n      alert.error('Please Fill out all the Fields');\n    else {\n      const formData = new FormData();\n      formData.set('name', name);\n      formData.set('price', price);\n      formData.set('description', description);\n      formData.set('category', category);\n      formData.set('stock', stock);\n      formData.set('seller', seller);\n      formData.set('status', status);\n\n      images.forEach((image) => {\n        formData.append('images', image);\n      });\n\n      dispatch(newProduct(formData));\n    }\n  };\n\n  const onChange = (e) => {\n    const files = Array.from(e.target.files);\n\n    setImagesPreview([]);\n    setImages([]);\n\n    files.forEach((file) => {\n      const reader = new FileReader();\n\n      reader.onload = () => {\n        if (reader.readyState === 2) {\n          setImagesPreview((oldArray) => [...oldArray, reader.result]);\n          setImages((oldArray) => [...oldArray, reader.result]);\n        }\n      };\n      reader.readAsDataURL(file);\n    });\n  };\n\n  return (\n    <Fragment>\n      <MetaData title={'New Product'} />\n      <div className=\"row m-0\">\n        <div className=\"col-12 col-md-2 p-0\">\n          <Sidebar />\n        </div>\n\n        <div className=\"col-12 col-md-10\">\n          <Fragment>\n            <div className=\"wrapper my-3\">\n              <form\n                className=\"shadow-lg p-5 container-fluid border-radius-20\"\n                onSubmit={submitHandler}\n                encType=\"multipart/form-data\"\n              >\n                <h1 className=\"mb-4\">New Product</h1>\n                <div className=\"form-group\">\n                  <label htmlFor=\"name_field\">Name</label>\n                  <input\n                    type=\"text\"\n                    id=\"name_field\"\n                    className=\"form-control\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"price_field\">Price</label>\n                  <input\n                    type=\"text\"\n                    id=\"price_field\"\n                    className=\"form-control\"\n                    value={price}\n                    onChange={(e) => setPrice(e.target.value)}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"description_field\">Description</label>\n                  <textarea\n                    className=\"form-control\"\n                    id=\"description_field\"\n                    rows=\"8\"\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                  ></textarea>\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"category_field\">Brand</label>\n                  <select\n                    className=\"form-control\"\n                    id=\"category_field\"\n                    value={category}\n                    onChange={(e) => setCategory(e.target.value)}\n                  >\n                    <option value=\"default\"></option>\n                    <option value=\"Mobiles\">Mobiles</option>\n                    <option value=\"Laptops\">Laptops</option>\n                    <option value=\"Smartwaches\">Smartwaches</option>\n                  </select>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"stock_field\">Stock</label>\n                  <input\n                    type=\"number\"\n                    id=\"stock_field\"\n                    className=\"form-control\"\n                    value={stock}\n                    onChange={(e) => setStock(e.target.value)}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"seller_field\">Seller Name</label>\n                  <input\n                    type=\"text\"\n                    id=\"seller_field\"\n                    className=\"form-control\"\n                    value={seller}\n                    onChange={(e) => setSeller(e.target.value)}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Images</label>\n\n                  <div className=\"custom-file\">\n                    <input\n                      type=\"file\"\n                      name=\"product_images\"\n                      className=\"custom-file-input\"\n                      id=\"customFile\"\n                      onChange={onChange}\n                      multiple\n                    />\n                    <label className=\"custom-file-label\" htmlFor=\"customFile\">\n                      Choose Images\n                    </label>\n                  </div>\n\n                  {imagesPreview.map((img) => (\n                    <img\n                      src={img}\n                      key={img}\n                      alt=\"Images Preview\"\n                      className=\"mt-3 mr-2\"\n                      width=\"55\"\n                      height=\"52\"\n                    />\n                  ))}\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"category_field\">Status</label>\n                  <select\n                    className=\"form-control\"\n                    id=\"category_field\"\n                    value={status}\n                    onChange={(e) => setStatus(e.target.value)}\n                  >\n                    <option value=\"upcoming\">Upcoming</option>\n                    <option value=\"published\">Published</option>\n                  </select>\n                </div>\n\n                <button\n                  id=\"login_button\"\n                  type=\"submit\"\n                  className=\"btn btn-block py-3 order-button\"\n                >\n                  CREATE\n                </button>\n              </form>\n            </div>\n          </Fragment>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default NewProduct;\n","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\admin\\ProcessOrder.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\admin\\Dashboard.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\admin\\ProductsList.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\admin\\UpdateProduct.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\admin\\ServiceView.js",["687","688","689"],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\admin\\UsersList.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\cart\\ConfirmOrder.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\cart\\OrderSuccess.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\cart\\Cart.js",["690"],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\cart\\Payment.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\layout\\Header.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\cart\\Shipping.js",["691"],"import { countries } from 'countries-list';\nimport React, { Fragment, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { saveShippingInfo } from '../../actions/cartActions';\nimport MetaData from '../layout/MetaData';\nimport CheckoutSteps from './CheckoutSteps';\n\nconst Shipping = ({ history }) => {\n  const countriesList = Object.values(countries);\n\n  const { shippingInfo } = useSelector((state) => state.cart);\n\n  const [address, setAddress] = useState('');\n  const [city, setCity] = useState('');\n  const [postalCode, setPostalCode] = useState(shippingInfo.postalCode);\n  const [phoneNo, setPhoneNo] = useState('');\n  const [country, setCountry] = useState('');\n\n  const dispatch = useDispatch();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    dispatch(saveShippingInfo({ address, city, phoneNo, postalCode, country }));\n    history.push('/confirm');\n  };\n\n  return (\n    <Fragment>\n      <MetaData title={'Shipping Info'} />\n\n      <CheckoutSteps shipping />\n\n      <div className=\"row wrapper\">\n        <div className=\"col-10 col-lg-5\">\n          <form className=\"shadow-lg\" onSubmit={submitHandler}>\n            <h1 className=\"mb-4\">Shipping Info</h1>\n            <div className=\"form-group\">\n              <label htmlFor=\"address_field\">Address</label>\n              <input\n                type=\"text\"\n                id=\"address_field\"\n                className=\"form-control\"\n                value={address}\n                onChange={(e) => setAddress(e.target.value)}\n                required\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"city_field\">City</label>\n              <input\n                type=\"text\"\n                id=\"city_field\"\n                className=\"form-control\"\n                value={city}\n                onChange={(e) => setCity(e.target.value)}\n                required\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"phone_field\">Phone No</label>\n              <input\n                type=\"phone\"\n                id=\"phone_field\"\n                className=\"form-control\"\n                value={phoneNo}\n                onChange={(e) => setPhoneNo(e.target.value)}\n                required\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"postal_code_field\">Postal Code</label>\n              <input\n                type=\"number\"\n                id=\"postal_code_field\"\n                className=\"form-control\"\n                value={postalCode}\n                onChange={(e) => setPostalCode(e.target.value)}\n                required\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"country_field\">Country</label>\n              <select\n                id=\"country_field\"\n                className=\"form-control\"\n                value={country}\n                onChange={(e) => setCountry(e.target.value)}\n                required\n              >\n                {countriesList.map((country) => (\n                  <option key={country.name} value={country.name}>\n                    {country.name}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <button\n              id=\"shipping_btn\"\n              type=\"submit\"\n              className=\"btn btn-block py-3\"\n            >\n              CONTINUE\n            </button>\n          </form>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Shipping;\n","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\layout\\Footer.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\order\\ListOrders.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\order\\OrderDetails.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\pages\\ContactUs.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\product\\ProductDetails.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\route\\ProtectedRoute.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\user\\ForgotPassword.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\user\\Profile.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\user\\Login.js",["692","693","694","695","696"],"import { ErrorMessage, Field, Form, Formik } from 'formik';\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { clearErrors, login } from '../../actions/userActions';\nimport Loader from '../layout/Loader';\nimport MetaData from '../layout/MetaData';\nconst Login = ({ history, location }) => {\n  const [validation, setValidation] = useState(0);\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  const { user, isAuthenticated, error, loading } = useSelector(\n    (state) => state.auth\n  );\n  let redirect = '';\n  if (!isAuthenticated || user.role !== 'admin')\n    redirect = location.search ? location.search.split('=')[1] : '/';\n  else\n    redirect = location.search ? location.search.split('=')[1] : '/dashboard';\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      history.push(redirect);\n    }\n  }, [dispatch, isAuthenticated, history]);\n  useEffect(() => {\n    if (error) {\n      dispatch(clearErrors());\n    }\n  }, []);\n\n  const defaulValues = {\n    email: '',\n    password: '',\n  };\n  const validationSchema = Yup.object().shape({\n    email: Yup.string()\n      .email('Invalid email address')\n      .required('Email is Required'),\n    password: Yup.string().required('Password is Required'),\n  });\n  const submitHandler = (values) => {\n    const formData = new FormData();\n    dispatch(clearErrors());\n    formData.set('email', values.email);\n    formData.set('password', values.password);\n    dispatch(login(formData));\n  };\n\n  return (\n    <Fragment>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Fragment>\n          <MetaData title={'Login'} />\n          <div className=\"my-5\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-lg-3\"></div>\n                <div className=\"col-lg-6\">\n                  <Formik\n                    initialValues={defaulValues}\n                    validationSchema={validationSchema}\n                    onSubmit={submitHandler}\n                  >\n                    <Form className=\"shadow-lg border-radius-20 p-4\">\n                      {error ? (\n                        <label htmlFor=\"email_field\">\n                          <p className=\"text-danger\">\n                            Email or Password is invalid\n                          </p>\n                        </label>\n                      ) : null}\n                      <h1 className=\"mb-3 text-center\">Login</h1>\n\n                      <div className=\"form-group\">\n                        <label htmlFor=\"email_field\">Email</label>\n                        <Field\n                          type=\"email\"\n                          name=\"email\"\n                          id=\"email_field\"\n                          className=\"form-control\"\n                        />\n                        <p className=\"text-danger\">\n                          <ErrorMessage name=\"email\" />\n                        </p>\n                      </div>\n\n                      <div className=\"form-group\">\n                        <label htmlFor=\"password_field\">Password</label>\n                        <Field\n                          type=\"password\"\n                          name=\"password\"\n                          id=\"password_field\"\n                          className=\"form-control\"\n                        />\n                        <p className=\"text-danger\">\n                          <ErrorMessage name=\"password\" />\n                        </p>\n                      </div>\n\n                      <div className=\"text-right\">\n                        <Link to=\"/password/forgot\" className=\"mb-4\">\n                          Forgot Password?\n                        </Link>\n                      </div>\n                      <div className=\"text-center mt-4\">\n                        <button\n                          id=\"login_button\"\n                          type=\"submit\"\n                          className=\" order-button px-5\"\n                        >\n                          LOGIN\n                        </button>\n                      </div>\n                      <div className=\"text-center\">\n                        <Link to=\"/register\" className=\"mt-3 btn\">\n                          Create a new account\n                        </Link>\n                      </div>\n                    </Form>\n                  </Formik>\n                </div>\n                <div className=\"col-lg-3\"></div>\n              </div>\n            </div>\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Login;\n","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\user\\NewPassword.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\user\\UpdatePassword.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\user\\UpdateProfile.js",["697"],"import React, { Fragment, useEffect, useState } from 'react';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  clearErrors,\n  loadUser,\n  updateProfile,\n} from '../../actions/userActions';\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants';\nimport MetaData from '../layout/MetaData';\n\nconst UpdateProfile = ({ history }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [avatar, setAvatar] = useState('');\n  const [avatarPreview, setAvatarPreview] = useState(\n    '/images/default_avatar.jpg'\n  );\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  const { user } = useSelector((state) => state.auth);\n  const { error, isUpdated, loading } = useSelector((state) => state.user);\n\n  useEffect(() => {\n    if (user) {\n      setName(user.name);\n      setEmail(user.email);\n      setAvatarPreview(user.avatar.url);\n    }\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (isUpdated) {\n      alert.success('User updated successfully');\n      dispatch(loadUser());\n\n      history.push('/profile');\n\n      dispatch({\n        type: UPDATE_PROFILE_RESET,\n      });\n    }\n  }, [dispatch, alert, error, history, isUpdated]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.set('name', name);\n    formData.set('email', email);\n    formData.set('avatar', avatar);\n\n    dispatch(updateProfile(formData));\n  };\n\n  const onChange = (e) => {\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      if (reader.readyState === 2) {\n        setAvatarPreview(reader.result);\n        setAvatar(reader.result);\n      }\n    };\n\n    reader.readAsDataURL(e.target.files[0]);\n  };\n  return (\n    <Fragment>\n      <MetaData title={'Update Profile'} />\n\n      <div className=\"row wrapper\">\n        <div className=\"col-10 col-lg-5\">\n          <form\n            className=\"shadow-lg\"\n            onSubmit={submitHandler}\n            encType=\"multipart/form-data\"\n          >\n            <h1 className=\"mt-2 mb-5\">Update Profile</h1>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"email_field\">Name</label>\n              <input\n                type=\"name\"\n                id=\"name_field\"\n                className=\"form-control\"\n                name=\"name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"email_field\">Email</label>\n              <input\n                type=\"email\"\n                id=\"email_field\"\n                className=\"form-control\"\n                name=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"avatar_upload\">Avatar</label>\n              <div className=\"d-flex align-items-center\">\n                <div>\n                  <figure className=\"avatar mr-3 item-rtl\">\n                    <img\n                      src={avatarPreview}\n                      className=\"rounded-circle\"\n                      alt=\"Avatar Preview\"\n                    />\n                  </figure>\n                </div>\n                <div className=\"custom-file\">\n                  <input\n                    type=\"file\"\n                    name=\"avatar\"\n                    className=\"custom-file-input\"\n                    id=\"customFile\"\n                    accept=\"image/*\"\n                    onChange={onChange}\n                  />\n                  <label className=\"custom-file-label\" htmlFor=\"customFile\">\n                    Choose Avatar\n                  </label>\n                </div>\n              </div>\n            </div>\n\n            <button\n              type=\"submit\"\n              className=\"btn update-btn btn-block mt-4 mb-3\"\n              disabled={loading ? true : false}\n            >\n              Update\n            </button>\n          </form>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default UpdateProfile;\n","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\user\\Register.js",["698","699"],"import { countries } from 'countries-list';\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { clearErrors, register } from '../../actions/userActions';\nimport MetaData from '../layout/MetaData';\n\nconst Register = ({ history }) => {\n  const countriesList = Object.values(countries);\n  const [user, setUser] = useState({\n    name: '',\n    email: '',\n\n    password: '',\n  });\n\n  const { name, email, password } = user;\n\n  const [avatar, setAvatar] = useState('');\n  const [avatarPreview, setAvatarPreview] = useState(\n    '/images/default_avatar.jpg'\n  );\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  const { isAuthenticated, error, loading } = useSelector(\n    (state) => state.auth\n  );\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      history.push('/');\n    }\n\n    if (error) {\n      console.log('error here');\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n  }, [dispatch, isAuthenticated, error, history]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.set('name', name);\n    formData.set('email', email);\n    formData.set('password', password);\n    formData.set('avatar', avatar);\n    if (name === '' || email === '' || password === '' || avatar === '') {\n      alert.show('please fill out all the fields');\n    } else {\n      dispatch(register(formData));\n    }\n  };\n\n  const onChange = (e) => {\n    if (e.target.name === 'avatar') {\n      const reader = new FileReader();\n\n      reader.onload = () => {\n        if (reader.readyState === 2) {\n          setAvatarPreview(reader.result);\n          setAvatar(reader.result);\n        }\n      };\n\n      reader.readAsDataURL(e.target.files[0]);\n    } else {\n      setUser({ ...user, [e.target.name]: e.target.value });\n    }\n  };\n\n  return (\n    <Fragment>\n      <MetaData title={'Register User'} />\n      <div className=\"container my-5\">\n        <form\n          className=\"shadow-lg p-4 border-radius-20\"\n          onSubmit={submitHandler}\n          encType=\"multipart/form-data\"\n        >\n          <h1 className=\"mb-3 text-center\">Register</h1>\n          <div className=\"row mt-5\">\n            <div className=\"col-lg-4\">\n              <div className=\"form-group\">\n                <div className=\"d-flex align-items-center\">\n                  <figure className=\"avatar\">\n                    <img\n                      src={avatarPreview}\n                      className=\"rounded-circle\"\n                      alt=\"Avatar Preview\"\n                    />\n                    <input\n                      type=\"file\"\n                      name=\"avatar\"\n                      className=\"hidden-file-input\"\n                      id=\"customFile\"\n                      accept=\"images/*\"\n                      onChange={onChange}\n                    />\n                  </figure>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-lg-7\">\n              <div className=\"form-group\">\n                <label htmlFor=\"email_field\">Name</label>\n                <input\n                  type=\"name\"\n                  id=\"name_field\"\n                  className=\"form-control\"\n                  name=\"name\"\n                  value={name}\n                  onChange={onChange}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"email_field\">Email</label>\n                <input\n                  type=\"email\"\n                  id=\"email_field\"\n                  className=\"form-control\"\n                  name=\"email\"\n                  value={email}\n                  onChange={onChange}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"password_field\">Password</label>\n                <input\n                  type=\"password\"\n                  id=\"password_field\"\n                  className=\"form-control\"\n                  name=\"password\"\n                  value={password}\n                  onChange={onChange}\n                />\n              </div>\n\n              <div className=\"text-center mt-5 mb-4\">\n                <button\n                  id=\"register_button\"\n                  type=\"submit\"\n                  className=\"order-button px-5\"\n                  disabled={loading ? true : false}\n                >\n                  REGISTER\n                </button>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Register;\n","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\admin\\UpdateUser.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\reducers\\cartReducers.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\reducers\\userReducers.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\reducers\\productReducers.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\reducers\\orderReducers.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\layout\\MetaData.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\admin\\Sidebar.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\layout\\Loader.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\actions\\orderActions.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\routes\\FetchData.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\actions\\productActions.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\actions\\cartActions.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\constants\\cartConstants.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\constants\\productConstants.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\constants\\userConstants.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\constants\\orderConstants.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\review\\ListReviews.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\Sections\\WhychooseUS.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\layout\\TopHeader.js",["700","701","702","703","704","705"],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\cart\\CheckoutSteps.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\layout\\Navbar.js",["706"],"import React, { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst Navbar = () => {\n  const [visible, setVisible] = useState(false);\n  const [active, setActive] = useState(false);\n  const [showMenu, setShowMenu] = useState(false);\n  const location = useLocation();\n\n  const toggleHotline = () => {\n    setActive(!active);\n  };\n\n  const toggleMenu = () => {\n    setShowMenu(!showMenu);\n  };\n\n  const handleScroll = () => {\n    const currentScrollPos = window.pageYOffset;\n\n    if (currentScrollPos > 90) {\n      setVisible(true);\n    } else {\n      setVisible(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, [visible, handleScroll, location]);\n\n  return (\n    <div\n      className={`navbar-area mb-2 ${\n        visible\n          ? 'is-sticky sticky-active container-fluid-fluid'\n          : 'container-fluid-fluid'\n      }`}\n    >\n      <div className={`main-navbar container-fluid ${showMenu && 'show'}`}>\n        <div className=\"container-fluid-fluid\">\n          <nav className=\"navbar navbar-expand-md navbar-light\">\n            <div className=\"collapse navbar-collapse mean-menu\">\n              <ul className=\"navbar-nav responsive-menu\">\n                <li\n                  className={\n                    location.pathname === '/' ? 'nav-item active' : 'nav-item'\n                  }\n                >\n                  <Link to=\"/\" className=\"nav-link\">\n                    HOME\n                  </Link>\n                </li>\n\n                <li\n                  className={\n                    location.pathname === '/products/mobiles'\n                      ? 'nav-item active'\n                      : 'nav-item'\n                  }\n                >\n                  <Link to=\"/products/mobiles\" className=\"nav-link\">\n                    MOBILES\n                  </Link>\n                </li>\n\n                <li\n                  className={\n                    location.pathname === '/products/laptops'\n                      ? 'nav-item active'\n                      : 'nav-item'\n                  }\n                >\n                  <Link to=\"/products/laptops\" className=\"nav-link\">\n                    LAPTOPS\n                  </Link>\n                </li>\n\n                <li\n                  className={\n                    location.pathname === '/products/smartwaches'\n                      ? 'nav-item active'\n                      : 'nav-item'\n                  }\n                >\n                  <Link to=\"/products/smartwaches\" className=\"nav-link\">\n                    SMARTWATCHES\n                  </Link>\n                </li>\n                <li\n                  className={\n                    location.pathname === '/upcoming/products'\n                      ? 'nav-item active'\n                      : 'nav-item'\n                  }\n                >\n                  <Link to=\"/upcoming/products\" className=\"nav-link\">\n                    UPCOMMING PRODUCTS\n                  </Link>\n                </li>\n\n                <li\n                  className={\n                    location.pathname === '/contactus'\n                      ? 'nav-item active'\n                      : 'nav-item'\n                  }\n                >\n                  <Link to=\"/contactus\" className=\"nav-link\">\n                    CONTACT US\n                  </Link>\n                </li>\n              </ul>\n\n              <div className=\"others-option d-flex align-items-center\">\n                <div className=\"option-item respo-nav\">\n                  <span>\n                    Hotline:\n                    <a href=\"tel:16545676789\">(+1) 654 567 – 6789</a>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </nav>\n        </div>\n      </div>\n\n      <div className=\"others-option-for-responsive\">\n        <div className=\"container-fluid-fluid\">\n          <div className=\"responsive-logo\">\n            <span>Econix</span>\n          </div>\n          <div className=\"dot-menu\" onClick={() => toggleHotline()}>\n            <div className=\"inner\">\n              <div className=\"circle circle-one\"></div>\n              <div className=\"circle circle-two\"></div>\n              <div className=\"circle circle-three\"></div>\n            </div>\n          </div>\n\n          <div className=\"hamburger-menu\" onClick={() => toggleMenu()}>\n            {showMenu ? (\n              <span className=\"x-icon\">x</span>\n            ) : (\n              <i className=\"bx bx-menu\"></i>\n            )}\n          </div>\n\n          <div\n            className={active ? 'active container-fluid' : 'container-fluid'}\n          >\n            <div className=\"option-inner\">\n              <ul className=\"navbar-nav responsive-menu\">\n                <li\n                  className={\n                    location.pathname === '/' ? 'nav-item active' : 'nav-item'\n                  }\n                >\n                  <Link to=\"/\" className=\"nav-link\">\n                    HOME\n                  </Link>\n                </li>\n\n                <li\n                  className={\n                    location.pathname === '/products/mobiles'\n                      ? 'nav-item active'\n                      : 'nav-item'\n                  }\n                >\n                  <Link to=\"/products/mobiles\" className=\"nav-link\">\n                    MOBILES\n                  </Link>\n                </li>\n\n                <li\n                  className={\n                    location.pathname === '/products/laptops'\n                      ? 'nav-item active'\n                      : 'nav-item'\n                  }\n                >\n                  <Link to=\"/products/laptops\" className=\"nav-link\">\n                    LAPTOPS\n                  </Link>\n                </li>\n\n                <li\n                  className={\n                    location.pathname === '/products/smartwaches'\n                      ? 'nav-item active'\n                      : 'nav-item'\n                  }\n                >\n                  <Link to=\"/products/smartwaches\" className=\"nav-link\">\n                    SMARTWATCHES\n                  </Link>\n                </li>\n                <li\n                  className={\n                    location.pathname === '/upcoming/products'\n                      ? 'nav-item active'\n                      : 'nav-item'\n                  }\n                >\n                  <Link to=\"/upcoming/products\" className=\"nav-link\">\n                    UPCOMMING PRODUCTS\n                  </Link>\n                </li>\n\n                <li\n                  className={\n                    location.pathname === '/contactus'\n                      ? 'nav-item active'\n                      : 'nav-item'\n                  }\n                >\n                  <Link to=\"/contactus\" className=\"nav-link\">\n                    CONTACT US\n                  </Link>\n                </li>\n              </ul>\n              <div className=\"others-option d-flex align-items-center\">\n                <div className=\"option-item\">\n                  <span>\n                    Hotline:\n                    <a href=\"tel:16545676789\">(+1) 654 567 – 6789</a>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\layout\\MiddleHeader.js",["707"],"import StyledBadge from '@material-ui/core/Badge';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport { useSelector } from 'react-redux';\nimport { Link, Route, withRouter } from 'react-router-dom';\nimport logo from '../../assets/img/logo.png';\nimport Search from './Search';\n\nconst MiddleHeader = () => {\n  const { cartItems } = useSelector((state) => state.cart);\n\n  return (\n    <div className=\"middle-header-area\">\n      <div className=\"container-fluid\">\n        <div className=\"row align-items-center\">\n          <div className=\"col-sm-3 d-none d-md-block\">\n            <div className=\"middle-header-logo\">\n              <Link to=\"/\">\n                <img\n                  src={logo}\n                  className=\"img-fluid\"\n                  style={{ maxHeight: '50px' }}\n                />\n              </Link>\n            </div>\n          </div>\n\n          <div className=\"col-9 col-md-6\">\n            <div className=\"middle-header-search\">\n              <Route render={({ history }) => <Search history={history} />} />\n            </div>\n          </div>\n\n          <div className=\"col-3\">\n            <ul className=\"middle-header-optional\">\n              <Link\n                to=\"/cart\"\n                style={{ textDecoration: 'none', width: '45px' }}\n              >\n                <Link to=\"/cart\">\n                  <IconButton\n                    aria-label=\"cart\"\n                    className=\"cartItem\"\n                    style={{ color: '#17204A' }}\n                  >\n                    <StyledBadge\n                      badgeContent={cartItems.length}\n                      color=\"secondary\"\n                    >\n                      <ShoppingCartIcon />\n                    </StyledBadge>\n                  </IconButton>\n                </Link>\n              </Link>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(MiddleHeader);\n","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\product\\Product.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\Sections\\AboutUs.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\layout\\MySlider.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\layout\\Search.js",[],"D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\product\\CompareProduct.js",["708","709"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport { Carousel } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { clearErrors, getProductDetails } from '../../actions/productActions';\r\nimport { NEW_REVIEW_RESET } from '../../constants/productConstants';\r\nimport { getData } from '../../routes/FetchData';\r\nimport Loader from '../layout/Loader';\r\nimport MetaData from '../layout/MetaData';\r\nconst CompareProduct = ({ match }) => {\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n  const [products, setProducts] = useState([]);\r\n  const [productId, setProductId] = useState('');\r\n\r\n  console.log('products', productId);\r\n  const { loading, error, product } = useSelector(\r\n    (state) => state.productDetails\r\n  );\r\n  const { error: reviewError, success } = useSelector(\r\n    (state) => state.newReview\r\n  );\r\n  useEffect(() => {\r\n    getData(`/api/v1/compare/products`)\r\n      .then((res) => {\r\n        setProducts(res.data.products);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(getProductDetails(match.params.id));\r\n\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (reviewError) {\r\n      alert.error(reviewError);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (success) {\r\n      alert.success('Reivew posted successfully');\r\n      dispatch({ type: NEW_REVIEW_RESET });\r\n    }\r\n    window.scrollTo({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: 'smooth',\r\n    });\r\n  }, [dispatch, alert, error, reviewError, match.params.id, success]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Fragment>\r\n          <MetaData title={product.name} />\r\n          <div className=\"compare\">\r\n            <select\r\n              className=\"form-control \"\r\n              id=\"category_field\"\r\n              value={productId}\r\n              onChange={(e) => setProductId(e.target.value)}\r\n            >\r\n              <option value=\"default\" className=\"text-danger firstOption\">\r\n                Compare With\r\n              </option>\r\n              {products.map((value, id) => (\r\n                <>\r\n                  {product.category === value.category ? (\r\n                    <option key={id} value={value._id}>\r\n                      {value.name}\r\n                    </option>\r\n                  ) : null}\r\n                </>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"row d-flex justify-content-around\">\r\n            <div className=\"col-12 col-lg-5 img-fluid\" id=\"product_image\">\r\n              <Carousel pause=\"hover\">\r\n                {product.images &&\r\n                  product.images.map((image) => (\r\n                    <Carousel.Item key={image.public_id}>\r\n                      <img\r\n                        className=\"d-block w-20 my-4\"\r\n                        src={image.url}\r\n                        alt={product.title}\r\n                        className=\"compareImg\"\r\n                      />\r\n                    </Carousel.Item>\r\n                  ))}\r\n              </Carousel>\r\n              <div className=\"col-12 \">\r\n                <h3>{product.name}</h3>\r\n                <p id=\"product_id\">Product # {product._id}</p>\r\n\r\n                <hr />\r\n\r\n                <div className=\"rating-outer\">\r\n                  <div\r\n                    className=\"rating-inner\"\r\n                    style={{ width: `${(product.ratings / 5) * 100}%` }}\r\n                  ></div>\r\n                </div>\r\n                <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\r\n\r\n                <hr />\r\n\r\n                <p id=\"product_price\">${product.price}</p>\r\n\r\n                <hr />\r\n\r\n                <p>\r\n                  Status:{' '}\r\n                  <span\r\n                    id=\"stock_status\"\r\n                    className={product.stock > 0 ? 'greenColor' : 'redColor'}\r\n                  >\r\n                    {product.stock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                  </span>\r\n                </p>\r\n\r\n                <hr />\r\n\r\n                <p>\r\n                  Quantity:{' '}\r\n                  <span\r\n                    id=\"quantity_status\"\r\n                    className={product.stock > 0 ? 'greenColor' : 'redColor'}\r\n                  >\r\n                    {product.stock}\r\n                  </span>\r\n                </p>\r\n\r\n                <hr />\r\n\r\n                <h4 className=\"mt-2\">Description:</h4>\r\n                <p>{product.description}</p>\r\n                <hr />\r\n                <p id=\"product_seller mb-3\">\r\n                  Sold by: <strong>{product.seller}</strong>\r\n                </p>\r\n              </div>\r\n            </div>\r\n            {/* second product */}\r\n\r\n            <div className=\"col-12 col-lg-5 img-fluid\" id=\"product_image\">\r\n              {products.map((value, id) => (\r\n                <>\r\n                  {productId === value._id ? (\r\n                    <>\r\n                      <Carousel pause=\"hover\">\r\n                        {value.images &&\r\n                          value.images.map((image) => (\r\n                            <Carousel.Item key={image.public_id}>\r\n                              <img\r\n                                className=\"d-block w-20 my-4\"\r\n                                className=\"compareImg\"\r\n                                src={image.url}\r\n                                alt={value.title}\r\n                              />\r\n                            </Carousel.Item>\r\n                          ))}\r\n                      </Carousel>\r\n                      <div className=\"col-12 \">\r\n                        <h3>{value.name}</h3>\r\n                        <p id=\"product_id\">Product # {value._id}</p>\r\n\r\n                        <hr />\r\n\r\n                        <div className=\"rating-outer\">\r\n                          <div\r\n                            className=\"rating-inner\"\r\n                            style={{ width: `${(value.ratings / 5) * 100}%` }}\r\n                          ></div>\r\n                        </div>\r\n                        <span id=\"no_of_reviews\">\r\n                          ({value.numOfReviews} Reviews)\r\n                        </span>\r\n\r\n                        <hr />\r\n\r\n                        <p id=\"product_price\">${value.price}</p>\r\n\r\n                        <hr />\r\n\r\n                        <p>\r\n                          Status:{' '}\r\n                          <span\r\n                            id=\"stock_status\"\r\n                            className={\r\n                              value.stock > 0 ? 'greenColor' : 'redColor'\r\n                            }\r\n                          >\r\n                            {value.stock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                          </span>\r\n                        </p>\r\n\r\n                        <hr />\r\n\r\n                        <p>\r\n                          Quantity:{' '}\r\n                          <span\r\n                            id=\"quantity_status\"\r\n                            className={\r\n                              value.stock > 0 ? 'greenColor' : 'redColor'\r\n                            }\r\n                          >\r\n                            {value.stock}\r\n                          </span>\r\n                        </p>\r\n\r\n                        <hr />\r\n\r\n                        <h4 className=\"mt-2\">Description:</h4>\r\n                        <p>{value.description}</p>\r\n                        <hr />\r\n                        <p id=\"product_seller mb-3\">\r\n                          Sold by: <strong>{value.seller}</strong>\r\n                        </p>\r\n                      </div>\r\n                    </>\r\n                  ) : null}\r\n                </>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CompareProduct;\r\n","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\product\\MobileProduct.js",["710","711"],"import Slider from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport Pagination from 'react-js-pagination';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProducts } from '../../actions/productActions';\r\nimport Loader from '../layout/Loader';\r\nimport MetaData from '../layout/MetaData';\r\nimport Product from '../product/Product';\r\n\r\nconst { createSliderWithTooltip } = Slider;\r\nconst Range = createSliderWithTooltip(Slider.Range);\r\n\r\nconst MobileProduct = ({ match }) => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [price, setPrice] = useState([1, 1000]);\r\n  const [range, setRange] = useState(1, 1000);\r\n  const [category, setCategory] = useState('');\r\n  const [rating, setRating] = useState(0);\r\n  const [status, setstatus] = useState('published');\r\n  const categories = ['Mobiles', 'Laptops', 'Smartwaches'];\r\n\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    loading,\r\n    products,\r\n    error,\r\n    productsCount,\r\n    resPerPage,\r\n    filteredProductsCount,\r\n  } = useSelector((state) => state.products);\r\n\r\n  const keyword = match.params.keyword;\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      return alert.error(error);\r\n    }\r\n    // console.log(price);\r\n    const category = 'Mobiles';\r\n    dispatch(\r\n      getProducts(keyword, currentPage, price, category, rating, status)\r\n    );\r\n  }, [\r\n    dispatch,\r\n    alert,\r\n    error,\r\n    keyword,\r\n    currentPage,\r\n    range,\r\n    category,\r\n    rating,\r\n    status,\r\n  ]);\r\n\r\n  function setCurrentPageNo(pageNumber) {\r\n    setCurrentPage(pageNumber);\r\n  }\r\n\r\n  let count = filteredProductsCount;\r\n  if (keyword) {\r\n    count = filteredProductsCount;\r\n  }\r\n  function filterHandler() {\r\n    setRange(price);\r\n  }\r\n  return (\r\n    <div>\r\n      <Fragment>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <Fragment>\r\n            <MetaData title={'MobileProduct.'} />\r\n\r\n            <section id=\"products\" className=\"container my-5\">\r\n              <h1 id=\"products_heading\" className=\"text-center mb-4\">\r\n                Mobile Products\r\n              </h1>\r\n\r\n              <div className=\"row\">\r\n                {keyword ? (\r\n                  <Fragment>\r\n                    <div className=\"col-6 col-md-3 px-3\">\r\n                      <div>\r\n                        <div className=\"pr-5\">\r\n                          <Range\r\n                            marks={{\r\n                              1: `$1`,\r\n                              1000: `$1000`,\r\n                            }}\r\n                            min={1}\r\n                            max={1000}\r\n                            defaultValue={[1, 1000]}\r\n                            tipFormatter={(value) => `$${value}`}\r\n                            tipProps={{\r\n                              placement: 'top',\r\n                              visible: true,\r\n                            }}\r\n                            value={price}\r\n                            onChange={(price) => setPrice(price)}\r\n                          />\r\n                        </div>\r\n                        <button\r\n                          className=\"Filter order-button px-5 mt-5\"\r\n                          onClick={filterHandler}\r\n                        >\r\n                          Filter\r\n                        </button>\r\n\r\n                        <hr className=\"my-5\" />\r\n\r\n                        <div className=\"my-5\">\r\n                          <h4 className=\"mb-3\">Brand</h4>\r\n\r\n                          <ul className=\"pl-0\">\r\n                            {categories &&\r\n                              categories.map((category) => (\r\n                                <li\r\n                                  style={{\r\n                                    cursor: 'pointer',\r\n                                    listStyleType: 'none',\r\n                                  }}\r\n                                  key={category}\r\n                                  onClick={() => setCategory(category)}\r\n                                >\r\n                                  {category}\r\n                                </li>\r\n                              ))}\r\n                          </ul>\r\n                        </div>\r\n\r\n                        <hr className=\"my-3\" />\r\n                        <div className=\"mt-5\">\r\n                          <h4 className=\"mb-3\">Ratings</h4>\r\n\r\n                          <ul className=\"pl-0\">\r\n                            {[5, 4, 3, 2, 1].map((star) => (\r\n                              <li\r\n                                style={{\r\n                                  cursor: 'pointer',\r\n                                  listStyleType: 'none',\r\n                                }}\r\n                                key={star}\r\n                                onClick={() => setRating(star)}\r\n                              >\r\n                                <div className=\"rating-outer\">\r\n                                  <div\r\n                                    className=\"rating-inner\"\r\n                                    style={{\r\n                                      width: `${star * 20}%`,\r\n                                    }}\r\n                                  ></div>\r\n                                </div>\r\n                              </li>\r\n                            ))}\r\n                          </ul>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6 col-md-9\">\r\n                      <div className=\"row\">\r\n                        {products.map((product) => (\r\n                          <Product\r\n                            key={product._id}\r\n                            product={product}\r\n                            col={4}\r\n                          />\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  </Fragment>\r\n                ) : (\r\n                  products.map((product) => (\r\n                    <Product key={product._id} product={product} />\r\n                  ))\r\n                )}\r\n              </div>\r\n            </section>\r\n\r\n            {resPerPage <= count && (\r\n              <div className=\"d-flex justify-content-center mt-5\">\r\n                <Pagination\r\n                  activePage={currentPage}\r\n                  itemsCountPerPage={resPerPage}\r\n                  totalItemsCount={productsCount}\r\n                  onChange={setCurrentPageNo}\r\n                  nextPageText={'Next'}\r\n                  prevPageText={'Prev'}\r\n                  firstPageText={'First'}\r\n                  lastPageText={'Last'}\r\n                  itemClass=\"page-item\"\r\n                  linkClass=\"page-link\"\r\n                />\r\n              </div>\r\n            )}\r\n          </Fragment>\r\n        )}\r\n      </Fragment>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MobileProduct;\r\n","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\product\\LaptopProduct.js",["712","713"],"import Slider from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport Pagination from 'react-js-pagination';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProducts } from '../../actions/productActions';\r\nimport Loader from '../layout/Loader';\r\nimport MetaData from '../layout/MetaData';\r\nimport Product from '../product/Product';\r\n\r\nconst { createSliderWithTooltip } = Slider;\r\nconst Range = createSliderWithTooltip(Slider.Range);\r\n\r\nconst LaptopProduct = ({ match }) => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [price, setPrice] = useState([1, 1000]);\r\n  const [range, setRange] = useState(1, 1000);\r\n  const [category, setCategory] = useState('');\r\n  const [rating, setRating] = useState(0);\r\n  const [status, setstatus] = useState('published');\r\n  const categories = ['Mobiles', 'Laptops', 'Smartwaches'];\r\n\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    loading,\r\n    products,\r\n    error,\r\n    productsCount,\r\n    resPerPage,\r\n    filteredProductsCount,\r\n  } = useSelector((state) => state.products);\r\n\r\n  const keyword = match.params.keyword;\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      return alert.error(error);\r\n    }\r\n    // console.log(price);\r\n    const category = 'Laptops';\r\n    dispatch(\r\n      getProducts(keyword, currentPage, price, category, rating, status)\r\n    );\r\n  }, [\r\n    dispatch,\r\n    alert,\r\n    error,\r\n    keyword,\r\n    currentPage,\r\n    range,\r\n    category,\r\n    rating,\r\n    status,\r\n  ]);\r\n\r\n  function setCurrentPageNo(pageNumber) {\r\n    setCurrentPage(pageNumber);\r\n  }\r\n\r\n  let count = filteredProductsCount;\r\n  if (keyword) {\r\n    count = filteredProductsCount;\r\n  }\r\n  function filterHandler() {\r\n    setRange(price);\r\n  }\r\n  return (\r\n    <div>\r\n      <Fragment>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <Fragment>\r\n            <MetaData title={'LaptopProduct.'} />\r\n\r\n            <section id=\"products\" className=\"container my-5\">\r\n              <h1 id=\"products_heading\" className=\"text-center mb-4\">\r\n                Laptop Products\r\n              </h1>\r\n\r\n              <div className=\"row\">\r\n                {keyword ? (\r\n                  <Fragment>\r\n                    <div className=\"col-6 col-md-3 px-3\">\r\n                      <div>\r\n                        <div className=\"pr-5\">\r\n                          <Range\r\n                            marks={{\r\n                              1: `$1`,\r\n                              1000: `$1000`,\r\n                            }}\r\n                            min={1}\r\n                            max={1000}\r\n                            defaultValue={[1, 1000]}\r\n                            tipFormatter={(value) => `$${value}`}\r\n                            tipProps={{\r\n                              placement: 'top',\r\n                              visible: true,\r\n                            }}\r\n                            value={price}\r\n                            onChange={(price) => setPrice(price)}\r\n                          />\r\n                        </div>\r\n                        <button\r\n                          className=\"Filter order-button px-5 mt-5\"\r\n                          onClick={filterHandler}\r\n                        >\r\n                          Filter\r\n                        </button>\r\n\r\n                        <hr className=\"my-5\" />\r\n\r\n                        <div className=\"my-5\">\r\n                          <h4 className=\"mb-3\">Brand</h4>\r\n\r\n                          <ul className=\"pl-0\">\r\n                            {categories &&\r\n                              categories.map((category) => (\r\n                                <li\r\n                                  style={{\r\n                                    cursor: 'pointer',\r\n                                    listStyleType: 'none',\r\n                                  }}\r\n                                  key={category}\r\n                                  onClick={() => setCategory(category)}\r\n                                >\r\n                                  {category}\r\n                                </li>\r\n                              ))}\r\n                          </ul>\r\n                        </div>\r\n\r\n                        <hr className=\"my-3\" />\r\n                        <div className=\"mt-5\">\r\n                          <h4 className=\"mb-3\">Ratings</h4>\r\n\r\n                          <ul className=\"pl-0\">\r\n                            {[5, 4, 3, 2, 1].map((star) => (\r\n                              <li\r\n                                style={{\r\n                                  cursor: 'pointer',\r\n                                  listStyleType: 'none',\r\n                                }}\r\n                                key={star}\r\n                                onClick={() => setRating(star)}\r\n                              >\r\n                                <div className=\"rating-outer\">\r\n                                  <div\r\n                                    className=\"rating-inner\"\r\n                                    style={{\r\n                                      width: `${star * 20}%`,\r\n                                    }}\r\n                                  ></div>\r\n                                </div>\r\n                              </li>\r\n                            ))}\r\n                          </ul>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6 col-md-9\">\r\n                      <div className=\"row\">\r\n                        {products.map((product) => (\r\n                          <Product\r\n                            key={product._id}\r\n                            product={product}\r\n                            col={4}\r\n                          />\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  </Fragment>\r\n                ) : (\r\n                  products.map((product) => (\r\n                    <Product key={product._id} product={product} />\r\n                  ))\r\n                )}\r\n              </div>\r\n            </section>\r\n\r\n            {resPerPage <= count && (\r\n              <div className=\"d-flex justify-content-center mt-5\">\r\n                <Pagination\r\n                  activePage={currentPage}\r\n                  itemsCountPerPage={resPerPage}\r\n                  totalItemsCount={productsCount}\r\n                  onChange={setCurrentPageNo}\r\n                  nextPageText={'Next'}\r\n                  prevPageText={'Prev'}\r\n                  firstPageText={'First'}\r\n                  lastPageText={'Last'}\r\n                  itemClass=\"page-item\"\r\n                  linkClass=\"page-link\"\r\n                />\r\n              </div>\r\n            )}\r\n          </Fragment>\r\n        )}\r\n      </Fragment>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LaptopProduct;\r\n","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\product\\SmartWaches.js",["714","715"],"import Slider from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport Pagination from 'react-js-pagination';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProducts } from '../../actions/productActions';\r\nimport Loader from '../layout/Loader';\r\nimport MetaData from '../layout/MetaData';\r\nimport Product from '../product/Product';\r\n\r\nconst { createSliderWithTooltip } = Slider;\r\nconst Range = createSliderWithTooltip(Slider.Range);\r\n\r\nconst SmartWaches = ({ match }) => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [price, setPrice] = useState([1, 1000]);\r\n  const [range, setRange] = useState(1, 1000);\r\n  const [category, setCategory] = useState('');\r\n  const [rating, setRating] = useState(0);\r\n  const [status, setstatus] = useState('published');\r\n\r\n  const categories = ['Mobiles', 'Laptops', 'Smartwaches'];\r\n\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    loading,\r\n    products,\r\n    error,\r\n    productsCount,\r\n    resPerPage,\r\n    filteredProductsCount,\r\n  } = useSelector((state) => state.products);\r\n\r\n  const keyword = match.params.keyword;\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      return alert.error(error);\r\n    }\r\n    // console.log(price);\r\n    const category = 'Smartwaches';\r\n    dispatch(\r\n      getProducts(keyword, currentPage, price, category, rating, status)\r\n    );\r\n  }, [\r\n    dispatch,\r\n    alert,\r\n    error,\r\n    keyword,\r\n    currentPage,\r\n    range,\r\n    category,\r\n    rating,\r\n    status,\r\n  ]);\r\n\r\n  function setCurrentPageNo(pageNumber) {\r\n    setCurrentPage(pageNumber);\r\n  }\r\n\r\n  let count = filteredProductsCount;\r\n  if (keyword) {\r\n    count = filteredProductsCount;\r\n  }\r\n  function filterHandler() {\r\n    setRange(price);\r\n  }\r\n  return (\r\n    <div>\r\n      <Fragment>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <Fragment>\r\n            <MetaData title={'SmartWaches.'} />\r\n\r\n            <section id=\"products\" className=\"container my-5\">\r\n              <h1 id=\"products_heading\" className=\"text-center mb-4\">\r\n                Smartwaches\r\n              </h1>\r\n\r\n              <div className=\"row\">\r\n                {keyword ? (\r\n                  <Fragment>\r\n                    <div className=\"col-6 col-md-3 px-3\">\r\n                      <div>\r\n                        <div className=\"pr-5\">\r\n                          <Range\r\n                            marks={{\r\n                              1: `$1`,\r\n                              1000: `$1000`,\r\n                            }}\r\n                            min={1}\r\n                            max={1000}\r\n                            defaultValue={[1, 1000]}\r\n                            tipFormatter={(value) => `$${value}`}\r\n                            tipProps={{\r\n                              placement: 'top',\r\n                              visible: true,\r\n                            }}\r\n                            value={price}\r\n                            onChange={(price) => setPrice(price)}\r\n                          />\r\n                        </div>\r\n                        <button\r\n                          className=\"Filter order-button px-5 mt-5\"\r\n                          onClick={filterHandler}\r\n                        >\r\n                          Filter\r\n                        </button>\r\n\r\n                        <hr className=\"my-5\" />\r\n\r\n                        <div className=\"my-5\">\r\n                          <h4 className=\"mb-3\">Brand</h4>\r\n\r\n                          <ul className=\"pl-0\">\r\n                            {categories &&\r\n                              categories.map((category) => (\r\n                                <li\r\n                                  style={{\r\n                                    cursor: 'pointer',\r\n                                    listStyleType: 'none',\r\n                                  }}\r\n                                  key={category}\r\n                                  onClick={() => setCategory(category)}\r\n                                >\r\n                                  {category}\r\n                                </li>\r\n                              ))}\r\n                          </ul>\r\n                        </div>\r\n\r\n                        <hr className=\"my-3\" />\r\n                        <div className=\"mt-5\">\r\n                          <h4 className=\"mb-3\">Ratings</h4>\r\n\r\n                          <ul className=\"pl-0\">\r\n                            {[5, 4, 3, 2, 1].map((star) => (\r\n                              <li\r\n                                style={{\r\n                                  cursor: 'pointer',\r\n                                  listStyleType: 'none',\r\n                                }}\r\n                                key={star}\r\n                                onClick={() => setRating(star)}\r\n                              >\r\n                                <div className=\"rating-outer\">\r\n                                  <div\r\n                                    className=\"rating-inner\"\r\n                                    style={{\r\n                                      width: `${star * 20}%`,\r\n                                    }}\r\n                                  ></div>\r\n                                </div>\r\n                              </li>\r\n                            ))}\r\n                          </ul>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6 col-md-9\">\r\n                      <div className=\"row\">\r\n                        {products.map((product) => (\r\n                          <Product\r\n                            key={product._id}\r\n                            product={product}\r\n                            col={4}\r\n                          />\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  </Fragment>\r\n                ) : (\r\n                  products.map((product) => (\r\n                    <Product key={product._id} product={product} />\r\n                  ))\r\n                )}\r\n              </div>\r\n            </section>\r\n\r\n            {resPerPage <= count && (\r\n              <div className=\"d-flex justify-content-center mt-5\">\r\n                <Pagination\r\n                  activePage={currentPage}\r\n                  itemsCountPerPage={resPerPage}\r\n                  totalItemsCount={productsCount}\r\n                  onChange={setCurrentPageNo}\r\n                  nextPageText={'Next'}\r\n                  prevPageText={'Prev'}\r\n                  firstPageText={'First'}\r\n                  lastPageText={'Last'}\r\n                  itemClass=\"page-item\"\r\n                  linkClass=\"page-link\"\r\n                />\r\n              </div>\r\n            )}\r\n          </Fragment>\r\n        )}\r\n      </Fragment>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SmartWaches;\r\n","D:\\Study\\University Study\\FYP\\kamran\\project\\frontend\\src\\components\\product\\UpcommingProducts.js",["716","717"],"import Slider from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport Pagination from 'react-js-pagination';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProducts } from '../../actions/productActions';\r\nimport Loader from '../layout/Loader';\r\nimport MetaData from '../layout/MetaData';\r\nimport Product from '../product/Product';\r\n\r\nconst { createSliderWithTooltip } = Slider;\r\nconst Range = createSliderWithTooltip(Slider.Range);\r\n\r\nconst UpcomingProducts = ({ match }) => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [price, setPrice] = useState([1, 1000]);\r\n  const [range, setRange] = useState(1, 1000);\r\n  const [category, setCategory] = useState('');\r\n  const [rating, setRating] = useState(0);\r\n  const [status, setstatus] = useState('upcoming');\r\n\r\n  const categories = ['Mobiles', 'Laptops', 'Smartwaches'];\r\n\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    loading,\r\n    products,\r\n    error,\r\n    productsCount,\r\n    resPerPage,\r\n    filteredProductsCount,\r\n  } = useSelector((state) => state.products);\r\n\r\n  const keyword = match.params.keyword;\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      return alert.error(error);\r\n    }\r\n    // console.log(price);\r\n\r\n    dispatch(\r\n      getProducts(keyword, currentPage, price, category, rating, status)\r\n    );\r\n  }, [\r\n    dispatch,\r\n    alert,\r\n    error,\r\n    keyword,\r\n    currentPage,\r\n    range,\r\n    category,\r\n    rating,\r\n    status,\r\n  ]);\r\n\r\n  function setCurrentPageNo(pageNumber) {\r\n    setCurrentPage(pageNumber);\r\n  }\r\n\r\n  let count = filteredProductsCount;\r\n  if (keyword) {\r\n    count = filteredProductsCount;\r\n  }\r\n  function filterHandler() {\r\n    setRange(price);\r\n  }\r\n  return (\r\n    <div>\r\n      <Fragment>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <Fragment>\r\n            <MetaData title={'UpcomingProducts.'} />\r\n\r\n            <section id=\"products\" className=\"container my-5\">\r\n              <h1 id=\"products_heading\" className=\"text-center mb-4\">\r\n                Upcoming Products\r\n              </h1>\r\n\r\n              <div className=\"row\">\r\n                {keyword ? (\r\n                  <Fragment>\r\n                    <div className=\"col-6 col-md-3 px-3\">\r\n                      <div>\r\n                        <div className=\"pr-5\">\r\n                          <Range\r\n                            marks={{\r\n                              1: `$1`,\r\n                              1000: `$1000`,\r\n                            }}\r\n                            min={1}\r\n                            max={1000}\r\n                            defaultValue={[1, 1000]}\r\n                            tipFormatter={(value) => `$${value}`}\r\n                            tipProps={{\r\n                              placement: 'top',\r\n                              visible: true,\r\n                            }}\r\n                            value={price}\r\n                            onChange={(price) => setPrice(price)}\r\n                          />\r\n                        </div>\r\n                        <button\r\n                          className=\"Filter order-button px-5 mt-5\"\r\n                          onClick={filterHandler}\r\n                        >\r\n                          Filter\r\n                        </button>\r\n\r\n                        <hr className=\"my-5\" />\r\n\r\n                        <div className=\"my-5\">\r\n                          <h4 className=\"mb-3\">Brand</h4>\r\n\r\n                          <ul className=\"pl-0\">\r\n                            {categories &&\r\n                              categories.map((category) => (\r\n                                <li\r\n                                  style={{\r\n                                    cursor: 'pointer',\r\n                                    listStyleType: 'none',\r\n                                  }}\r\n                                  key={category}\r\n                                  onClick={() => setCategory(category)}\r\n                                >\r\n                                  {category}\r\n                                </li>\r\n                              ))}\r\n                          </ul>\r\n                        </div>\r\n\r\n                        <hr className=\"my-3\" />\r\n                        <div className=\"mt-5\">\r\n                          <h4 className=\"mb-3\">Ratings</h4>\r\n\r\n                          <ul className=\"pl-0\">\r\n                            {[5, 4, 3, 2, 1].map((star) => (\r\n                              <li\r\n                                style={{\r\n                                  cursor: 'pointer',\r\n                                  listStyleType: 'none',\r\n                                }}\r\n                                key={star}\r\n                                onClick={() => setRating(star)}\r\n                              >\r\n                                <div className=\"rating-outer\">\r\n                                  <div\r\n                                    className=\"rating-inner\"\r\n                                    style={{\r\n                                      width: `${star * 20}%`,\r\n                                    }}\r\n                                  ></div>\r\n                                </div>\r\n                              </li>\r\n                            ))}\r\n                          </ul>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6 col-md-9\">\r\n                      <div className=\"row\">\r\n                        {products.map((product) => (\r\n                          <Product\r\n                            key={product._id}\r\n                            product={product}\r\n                            col={4}\r\n                          />\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  </Fragment>\r\n                ) : (\r\n                  products.map((product) => (\r\n                    <Product key={product._id} product={product} />\r\n                  ))\r\n                )}\r\n              </div>\r\n            </section>\r\n\r\n            {resPerPage <= count && (\r\n              <div className=\"d-flex justify-content-center mt-5\">\r\n                <Pagination\r\n                  activePage={currentPage}\r\n                  itemsCountPerPage={resPerPage}\r\n                  totalItemsCount={productsCount}\r\n                  onChange={setCurrentPageNo}\r\n                  nextPageText={'Next'}\r\n                  prevPageText={'Prev'}\r\n                  firstPageText={'First'}\r\n                  lastPageText={'Last'}\r\n                  itemClass=\"page-item\"\r\n                  linkClass=\"page-link\"\r\n                />\r\n              </div>\r\n            )}\r\n          </Fragment>\r\n        )}\r\n      </Fragment>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpcomingProducts;\r\n",{"ruleId":"718","replacedBy":"719"},{"ruleId":"720","replacedBy":"721"},{"ruleId":"722","severity":1,"message":"723","line":53,"column":6,"nodeType":"724","endLine":53,"endColumn":77,"suggestions":"725"},{"ruleId":"726","severity":1,"message":"727","line":90,"column":23,"nodeType":"728","endLine":96,"endColumn":25},{"ruleId":"729","severity":1,"message":"730","line":12,"column":9,"nodeType":"731","messageId":"732","endLine":12,"endColumn":17},{"ruleId":"729","severity":1,"message":"733","line":25,"column":10,"nodeType":"731","messageId":"732","endLine":25,"endColumn":22},{"ruleId":"729","severity":1,"message":"730","line":12,"column":9,"nodeType":"731","messageId":"732","endLine":12,"endColumn":17},{"ruleId":"729","severity":1,"message":"734","line":14,"column":20,"nodeType":"731","messageId":"732","endLine":14,"endColumn":25},{"ruleId":"729","severity":1,"message":"735","line":14,"column":27,"nodeType":"731","messageId":"732","endLine":14,"endColumn":32},{"ruleId":"729","severity":1,"message":"736","line":15,"column":11,"nodeType":"731","messageId":"732","endLine":15,"endColumn":20},{"ruleId":"729","severity":1,"message":"730","line":12,"column":9,"nodeType":"731","messageId":"732","endLine":12,"endColumn":17},{"ruleId":"729","severity":1,"message":"737","line":10,"column":10,"nodeType":"731","messageId":"732","endLine":10,"endColumn":19},{"ruleId":"729","severity":1,"message":"738","line":10,"column":21,"nodeType":"731","messageId":"732","endLine":10,"endColumn":33},{"ruleId":"722","severity":1,"message":"739","line":29,"column":6,"nodeType":"724","endLine":29,"endColumn":8,"suggestions":"740"},{"ruleId":"726","severity":1,"message":"727","line":107,"column":23,"nodeType":"728","endLine":113,"endColumn":25},{"ruleId":"722","severity":1,"message":"739","line":32,"column":6,"nodeType":"724","endLine":32,"endColumn":8,"suggestions":"741"},{"ruleId":"722","severity":1,"message":"739","line":27,"column":6,"nodeType":"724","endLine":27,"endColumn":8,"suggestions":"742"},{"ruleId":"722","severity":1,"message":"743","line":26,"column":6,"nodeType":"724","endLine":26,"endColumn":8,"suggestions":"744"},{"ruleId":"722","severity":1,"message":"743","line":23,"column":6,"nodeType":"724","endLine":23,"endColumn":8,"suggestions":"745"},{"ruleId":"729","severity":1,"message":"746","line":9,"column":17,"nodeType":"731","messageId":"732","endLine":9,"endColumn":24},{"ruleId":"729","severity":1,"message":"747","line":32,"column":10,"nodeType":"731","messageId":"732","endLine":32,"endColumn":17},{"ruleId":"722","severity":1,"message":"739","line":48,"column":6,"nodeType":"724","endLine":48,"endColumn":8,"suggestions":"748"},{"ruleId":"729","severity":1,"message":"749","line":22,"column":10,"nodeType":"731","messageId":"732","endLine":22,"endColumn":14},{"ruleId":"729","severity":1,"message":"750","line":22,"column":16,"nodeType":"731","messageId":"732","endLine":22,"endColumn":23},{"ruleId":"722","severity":1,"message":"739","line":47,"column":6,"nodeType":"724","endLine":47,"endColumn":8,"suggestions":"751"},{"ruleId":"722","severity":1,"message":"752","line":40,"column":6,"nodeType":"724","endLine":40,"endColumn":56,"suggestions":"753"},{"ruleId":"722","severity":1,"message":"754","line":44,"column":6,"nodeType":"724","endLine":44,"endColumn":49,"suggestions":"755"},{"ruleId":"722","severity":1,"message":"756","line":50,"column":6,"nodeType":"724","endLine":50,"endColumn":50,"suggestions":"757"},{"ruleId":"758","severity":1,"message":"759","line":68,"column":35,"nodeType":"728","endLine":68,"endColumn":47},{"ruleId":"758","severity":1,"message":"759","line":102,"column":45,"nodeType":"728","endLine":102,"endColumn":57},{"ruleId":"729","severity":1,"message":"760","line":30,"column":5,"nodeType":"731","messageId":"732","endLine":30,"endColumn":24},{"ruleId":"761","severity":1,"message":"762","line":5,"column":3,"nodeType":"763","messageId":"764","endLine":12,"endColumn":4},{"ruleId":"726","severity":1,"message":"727","line":18,"column":13,"nodeType":"728","endLine":18,"endColumn":50},{"ruleId":"722","severity":1,"message":"765","line":18,"column":9,"nodeType":"766","endLine":26,"endColumn":4},{"ruleId":"729","severity":1,"message":"746","line":21,"column":10,"nodeType":"731","messageId":"732","endLine":21,"endColumn":17},{"ruleId":"729","severity":1,"message":"767","line":25,"column":16,"nodeType":"731","messageId":"732","endLine":25,"endColumn":23},{"ruleId":"729","severity":1,"message":"768","line":26,"column":9,"nodeType":"731","messageId":"732","endLine":26,"endColumn":16},{"ruleId":"722","severity":1,"message":"769","line":30,"column":6,"nodeType":"724","endLine":30,"endColumn":13,"suggestions":"770"},{"ruleId":"771","severity":1,"message":"772","line":19,"column":17,"nodeType":"728","endLine":23,"endColumn":19},{"ruleId":"729","severity":1,"message":"773","line":6,"column":10,"nodeType":"731","messageId":"732","endLine":6,"endColumn":16},{"ruleId":"729","severity":1,"message":"774","line":6,"column":18,"nodeType":"731","messageId":"732","endLine":6,"endColumn":27},{"ruleId":"729","severity":1,"message":"775","line":9,"column":9,"nodeType":"731","messageId":"732","endLine":9,"endColumn":21},{"ruleId":"718","replacedBy":"776"},{"ruleId":"720","replacedBy":"777"},{"ruleId":"729","severity":1,"message":"778","line":23,"column":18,"nodeType":"731","messageId":"732","endLine":23,"endColumn":27},{"ruleId":"722","severity":1,"message":"723","line":48,"column":6,"nodeType":"724","endLine":58,"endColumn":4,"suggestions":"779"},{"ruleId":"729","severity":1,"message":"780","line":20,"column":9,"nodeType":"731","messageId":"732","endLine":20,"endColumn":19},{"ruleId":"729","severity":1,"message":"746","line":25,"column":11,"nodeType":"731","messageId":"732","endLine":25,"endColumn":18},{"ruleId":"729","severity":1,"message":"749","line":22,"column":10,"nodeType":"731","messageId":"732","endLine":22,"endColumn":14},{"ruleId":"729","severity":1,"message":"750","line":22,"column":16,"nodeType":"731","messageId":"732","endLine":22,"endColumn":23},{"ruleId":"722","severity":1,"message":"739","line":47,"column":6,"nodeType":"724","endLine":47,"endColumn":8,"suggestions":"781"},{"ruleId":"729","severity":1,"message":"782","line":9,"column":11,"nodeType":"731","messageId":"732","endLine":9,"endColumn":15},{"ruleId":"729","severity":1,"message":"746","line":9,"column":17,"nodeType":"731","messageId":"732","endLine":9,"endColumn":24},{"ruleId":"729","severity":1,"message":"783","line":11,"column":10,"nodeType":"731","messageId":"732","endLine":11,"endColumn":20},{"ruleId":"729","severity":1,"message":"784","line":11,"column":22,"nodeType":"731","messageId":"732","endLine":11,"endColumn":35},{"ruleId":"729","severity":1,"message":"785","line":13,"column":9,"nodeType":"731","messageId":"732","endLine":13,"endColumn":14},{"ruleId":"722","severity":1,"message":"786","line":29,"column":6,"nodeType":"724","endLine":29,"endColumn":42,"suggestions":"787"},{"ruleId":"722","severity":1,"message":"788","line":34,"column":6,"nodeType":"724","endLine":34,"endColumn":8,"suggestions":"789"},{"ruleId":"722","severity":1,"message":"756","line":48,"column":6,"nodeType":"724","endLine":48,"endColumn":50,"suggestions":"790"},{"ruleId":"729","severity":1,"message":"791","line":9,"column":9,"nodeType":"731","messageId":"732","endLine":9,"endColumn":22},{"ruleId":"722","severity":1,"message":"754","line":41,"column":6,"nodeType":"724","endLine":41,"endColumn":49,"suggestions":"792"},{"ruleId":"729","severity":1,"message":"793","line":9,"column":10,"nodeType":"731","messageId":"732","endLine":9,"endColumn":15},{"ruleId":"729","severity":1,"message":"794","line":9,"column":17,"nodeType":"731","messageId":"732","endLine":9,"endColumn":25},{"ruleId":"729","severity":1,"message":"795","line":13,"column":10,"nodeType":"731","messageId":"732","endLine":13,"endColumn":12},{"ruleId":"729","severity":1,"message":"796","line":13,"column":14,"nodeType":"731","messageId":"732","endLine":13,"endColumn":19},{"ruleId":"729","severity":1,"message":"797","line":14,"column":10,"nodeType":"731","messageId":"732","endLine":14,"endColumn":18},{"ruleId":"729","severity":1,"message":"798","line":14,"column":20,"nodeType":"731","messageId":"732","endLine":14,"endColumn":31},{"ruleId":"722","severity":1,"message":"765","line":18,"column":9,"nodeType":"766","endLine":26,"endColumn":4},{"ruleId":"771","severity":1,"message":"772","line":19,"column":17,"nodeType":"728","endLine":23,"endColumn":19},{"ruleId":"799","severity":1,"message":"800","line":95,"column":25,"nodeType":"801","messageId":"802","endLine":95,"endColumn":47},{"ruleId":"799","severity":1,"message":"800","line":165,"column":33,"nodeType":"801","messageId":"802","endLine":165,"endColumn":55},{"ruleId":"729","severity":1,"message":"778","line":21,"column":18,"nodeType":"731","messageId":"732","endLine":21,"endColumn":27},{"ruleId":"722","severity":1,"message":"723","line":47,"column":6,"nodeType":"724","endLine":57,"endColumn":4,"suggestions":"803"},{"ruleId":"729","severity":1,"message":"778","line":21,"column":18,"nodeType":"731","messageId":"732","endLine":21,"endColumn":27},{"ruleId":"722","severity":1,"message":"723","line":47,"column":6,"nodeType":"724","endLine":57,"endColumn":4,"suggestions":"804"},{"ruleId":"729","severity":1,"message":"778","line":21,"column":18,"nodeType":"731","messageId":"732","endLine":21,"endColumn":27},{"ruleId":"722","severity":1,"message":"723","line":48,"column":6,"nodeType":"724","endLine":58,"endColumn":4,"suggestions":"805"},{"ruleId":"729","severity":1,"message":"778","line":21,"column":18,"nodeType":"731","messageId":"732","endLine":21,"endColumn":27},{"ruleId":"722","severity":1,"message":"723","line":48,"column":6,"nodeType":"724","endLine":58,"endColumn":4,"suggestions":"806"},"no-native-reassign",["807"],"no-negated-in-lhs",["808"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'price'. Either include it or remove the dependency array.","ArrayExpression",["809"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'weeklyProfit' is assigned a value but never used.","'error' is assigned a value but never used.","'users' is assigned a value but never used.","'isDeleted' is assigned a value but never used.","'blogsData' is assigned a value but never used.","'setblogsData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'alert' and 'props.match.params.id'. Either include them or remove the dependency array.",["810"],["811"],["812"],"React Hook useEffect has a missing dependency: 'user._id'. Either include it or remove the dependency array.",["813"],["814"],"'loading' is assigned a value but never used.","'SubData' is assigned a value but never used.",["815"],"'data' is assigned a value but never used.","'setData' is assigned a value but never used.",["816"],"React Hook useEffect has missing dependencies: 'redirect' and 'validation'. Either include them or remove the dependency array. You can also do a functional update 'setValidation(v => ...)' if you only need 'validation' in the 'setValidation' call.",["817"],"React Hook useEffect has a missing dependency: 'alert'. Either include it or remove the dependency array.",["818"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["819"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'DELETE_REVIEW_RESET' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","The 'handleScroll' function makes the dependencies of useEffect Hook (at line 31) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'handleScroll' in its own useCallback() Hook.","VariableDeclarator","'setPage' is assigned a value but never used.","'pageEnd' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'heading'. Either include it or remove the dependency array.",["820"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'cancel' is assigned a value but never used.","'setCancel' is assigned a value but never used.","'onEmojiClick' is assigned a value but never used.",["807"],["808"],"'setstatus' is assigned a value but never used.",["821"],"'categories' is assigned a value but never used.",["822"],"'user' is assigned a value but never used.","'validation' is assigned a value but never used.","'setValidation' is assigned a value but never used.","'alert' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'redirect'. Either include it or remove the dependency array.",["823"],"React Hook useEffect has missing dependencies: 'dispatch' and 'error'. Either include them or remove the dependency array.",["824"],["825"],"'countriesList' is assigned a value but never used.",["826"],"'valid' is assigned a value but never used.","'setValid' is assigned a value but never used.","'id' is assigned a value but never used.","'setId' is assigned a value but never used.","'userdata' is assigned a value but never used.","'setUserdata' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps",["827"],["828"],["829"],["830"],"no-global-assign","no-unsafe-negation",{"desc":"831","fix":"832"},{"desc":"833","fix":"834"},{"desc":"833","fix":"835"},{"desc":"833","fix":"836"},{"desc":"837","fix":"838"},{"desc":"837","fix":"839"},{"desc":"833","fix":"840"},{"desc":"833","fix":"841"},{"desc":"842","fix":"843"},{"desc":"844","fix":"845"},{"desc":"846","fix":"847"},{"desc":"848","fix":"849"},{"desc":"850","fix":"851"},{"desc":"833","fix":"852"},{"desc":"853","fix":"854"},{"desc":"855","fix":"856"},{"desc":"846","fix":"857"},{"desc":"844","fix":"858"},{"desc":"850","fix":"859"},{"desc":"850","fix":"860"},{"desc":"850","fix":"861"},{"desc":"850","fix":"862"},"Update the dependencies array to be: [dispatch, alert, error, keyword, currentPage, range, category, rating, price]",{"range":"863","text":"864"},"Update the dependencies array to be: [alert, props.match.params.id]",{"range":"865","text":"866"},{"range":"867","text":"866"},{"range":"868","text":"866"},"Update the dependencies array to be: [user._id]",{"range":"869","text":"870"},{"range":"871","text":"870"},{"range":"872","text":"866"},{"range":"873","text":"866"},"Update the dependencies array to be: [dispatch, alert, isAuthenticated, error, history, redirect, validation]",{"range":"874","text":"875"},"Update the dependencies array to be: [dispatch, isAuthenticated, error, history, alert]",{"range":"876","text":"877"},"Update the dependencies array to be: [dispatch, alert, error, history, isUpdated, user]",{"range":"878","text":"879"},"Update the dependencies array to be: [heading, valid]",{"range":"880","text":"881"},"Update the dependencies array to be: [dispatch, alert, error, keyword, currentPage, range, category, rating, status, price]",{"range":"882","text":"883"},{"range":"884","text":"866"},"Update the dependencies array to be: [dispatch, isAuthenticated, history, redirect]",{"range":"885","text":"886"},"Update the dependencies array to be: [dispatch, error]",{"range":"887","text":"888"},{"range":"889","text":"879"},{"range":"890","text":"877"},{"range":"891","text":"883"},{"range":"892","text":"883"},{"range":"893","text":"883"},{"range":"894","text":"883"},[1534,1605],"[dispatch, alert, error, keyword, currentPage, range, category, rating, price]",[1029,1031],"[alert, props.match.params.id]",[1197,1199],[854,856],[993,995],"[user._id]",[850,852],[1300,1302],[1944,1946],[1245,1295],"[dispatch, alert, isAuthenticated, error, history, redirect, validation]",[1115,1158],"[dispatch, isAuthenticated, error, history, alert]",[1239,1283],"[dispatch, alert, error, history, isUpdated, user]",[1192,1199],"[heading, valid]",[1489,1609],"[dispatch, alert, error, keyword, currentPage, range, category, rating, status, price]",[1944,1946],[1002,1038],"[dispatch, isAuthenticated, history, redirect]",[1120,1122],"[dispatch, error]",[1242,1286],[1022,1065],[1490,1620],[1490,1620],[1494,1624],[1463,1593]]